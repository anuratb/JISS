[{"/home/anurat/jiss/frontend/src/index.js":"1","/home/anurat/jiss/frontend/src/App.js":"2","/home/anurat/jiss/frontend/src/Auth.js":"3","/home/anurat/jiss/frontend/src/ProtectedRoute.js":"4","/home/anurat/jiss/frontend/src/reportWebVitals.js":"5","/home/anurat/jiss/frontend/src/components/judge.component.js":"6","/home/anurat/jiss/frontend/src/components/nvbar.components.js":"7","/home/anurat/jiss/frontend/src/components/lawyer.component.js":"8","/home/anurat/jiss/frontend/src/components/registrar.component.js":"9","/home/anurat/jiss/frontend/src/components/login.component.js":"10","/home/anurat/JISS/frontend/src/index.js":"11","/home/anurat/JISS/frontend/src/Auth.js":"12","/home/anurat/JISS/frontend/src/App.js":"13","/home/anurat/JISS/frontend/src/ProtectedRoute.js":"14","/home/anurat/JISS/frontend/src/reportWebVitals.js":"15","/home/anurat/JISS/frontend/src/components/nvbar.components.js":"16","/home/anurat/JISS/frontend/src/components/lawyer.component.js":"17","/home/anurat/JISS/frontend/src/components/judge.component.js":"18","/home/anurat/JISS/frontend/src/components/registrar.component.js":"19","/home/anurat/JISS/frontend/src/components/login.component.js":"20","/home/anurat/JISS/frontend/src/components/court_case.component.js":"21","/home/anurat/JISS/frontend/src/components/table.js":"22","/home/anurat/JISS/frontend/src/components/home.js":"23","/home/anurat/JISS/frontend/src/components/logoutbutton.js":"24","/home/anurat/JISS/frontend/src/components/dispCIN.component.js":"25","/home/anurat/JISS/frontend/src/components/addUser.component.js":"26","/home/anurat/JISS/frontend/src/components/removeUser.component.js":"27","/home/anurat/JISS/frontend/src/components/viewfreeslot.component.js":"28","/home/anurat/JISS/frontend/src/components/createcase.component.js":"29","/home/anurat/JISS/frontend/src/components/viewPendingCases.component.js":"30","/home/anurat/JISS/frontend/src/components/enterAdjDetails.component.js":"31","/home/anurat/JISS/frontend/src/components/queryStatus.component.js":"32","/home/anurat/JISS/frontend/src/components/resolvedCases.component.js":"33","/home/anurat/JISS/frontend/src/components/viewUpcomingByDate.component.js":"34","/home/anurat/JISS/frontend/src/components/closecase.component.js":"35"},{"size":1750,"mtime":1615978680000,"results":"36","hashOfConfig":"37"},{"size":1959,"mtime":1615978680000,"results":"38","hashOfConfig":"37"},{"size":219,"mtime":1615978680000,"results":"39","hashOfConfig":"37"},{"size":593,"mtime":1615978680000,"results":"40","hashOfConfig":"37"},{"size":362,"mtime":1615978680000,"results":"41","hashOfConfig":"37"},{"size":3310,"mtime":1615978680000,"results":"42","hashOfConfig":"37"},{"size":917,"mtime":1615978680000,"results":"43","hashOfConfig":"37"},{"size":3310,"mtime":1615978680000,"results":"44","hashOfConfig":"37"},{"size":3070,"mtime":1615978680000,"results":"45","hashOfConfig":"37"},{"size":2227,"mtime":1615978680000,"results":"46","hashOfConfig":"37"},{"size":665,"mtime":1616955002703,"results":"47","hashOfConfig":"48"},{"size":751,"mtime":1616947013716,"results":"49","hashOfConfig":"48"},{"size":5534,"mtime":1617642478747,"results":"50","hashOfConfig":"48"},{"size":582,"mtime":1616943515889,"results":"51","hashOfConfig":"48"},{"size":362,"mtime":1615978680000,"results":"52","hashOfConfig":"48"},{"size":992,"mtime":1616953195512,"results":"53","hashOfConfig":"48"},{"size":8604,"mtime":1617737149135,"results":"54","hashOfConfig":"48"},{"size":8132,"mtime":1617737251059,"results":"55","hashOfConfig":"48"},{"size":4956,"mtime":1617546946126,"results":"56","hashOfConfig":"48"},{"size":4526,"mtime":1617549888992,"results":"57","hashOfConfig":"48"},{"size":4589,"mtime":1617634500845,"results":"58","hashOfConfig":"48"},{"size":605,"mtime":1616607163610,"results":"59","hashOfConfig":"48"},{"size":311,"mtime":1616993421545,"results":"60","hashOfConfig":"48"},{"size":129,"mtime":1616993431127,"results":"61","hashOfConfig":"48"},{"size":2042,"mtime":1617634513381,"results":"62","hashOfConfig":"48"},{"size":8104,"mtime":1617603063768,"results":"63","hashOfConfig":"48"},{"size":5943,"mtime":1617358115222,"results":"64","hashOfConfig":"48"},{"size":12275,"mtime":1617642642948,"results":"65","hashOfConfig":"48"},{"size":16475,"mtime":1617634583069,"results":"66","hashOfConfig":"48"},{"size":4587,"mtime":1617634298987,"results":"67","hashOfConfig":"48"},{"size":9303,"mtime":1617604632428,"results":"68","hashOfConfig":"48"},{"size":3870,"mtime":1617443013305,"results":"69","hashOfConfig":"48"},{"size":7683,"mtime":1617548013132,"results":"70","hashOfConfig":"48"},{"size":5758,"mtime":1617634302247,"results":"71","hashOfConfig":"48"},{"size":3898,"mtime":1617595737104,"results":"72","hashOfConfig":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},"19s9npt",{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},"7txwnl",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"102"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"102"},"/home/anurat/jiss/frontend/src/index.js",["172","173"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport Auth from './Auth';\nimport Navbar from \"./components/nvbar.components\";\nimport Judge from \"./components/judge.component\";\nimport Lawyer from \"./components/lawyer.component\";\nimport Registrar from\"./components/registrar.component\";\nimport reportWebVitals from './reportWebVitals';\nimport {\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\"\nReactDOM.render(\n  <Router>\n    <div>\n      <Navbar />\n      <Switch>\n        {/**Later all the routes which need to be protected will be changed to protected routes */}\n        <Route exact path=\"/home\" ><GuestMessage user=\"ABCD\" /></Route>{/**For testing ProtectedRoute */}\n        <Route exact path=\"/login\">{Auth.isLoggedIn() ? <Redirect to=\"/home\" /> : <App />}</Route>\n        <Route exact path=\"/userType-judge\"><Judge name=\"Judge Name\" /></Route>\n        <Route exact path=\"/userType-lawyer\"><Lawyer name=\"Lawyer Name\" /></Route>\n        <Route exact path=\"/userType-registrar\"><Registrar name=\"Registrar Name\"/></Route>\n\n      </Switch>\n      {/*(!Auth.isLoggedIn()) ? <Redirect to=\"/login\" /> : <Redirect to=\"/home\" />*/}\n    </div >\n  </Router >\n  ,\n  document.getElementById('root')\n);\nfunction GuestMessage(props) {\n  return (\n    <div>      \n      <h1>Welcome to Judiciary Management System, {props.user}</h1>\n    </div>\n  );\n}\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/home/anurat/jiss/frontend/src/App.js",["174","175","176","177","178","179","180"],"import './App.css';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Auth from './Auth';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport Login from \"./components/login.component\";\n\n/*\nfunction LoggedInMessage(props) {\n  return <h1>Welcome back!</h1>;\n}\n\nfunction GuestMesage(props) {\n  return (\n    <h1>Welcome to Judiciary Management System</h1>\n  );\n}\n\nfunction WelcomeMessage(props) {\n  const isLoggedIn = props.isLoggedIn;\n  if (isLoggedIn) { return <UserGreeting />; } return <GuestGreeting />;\n}\n\n\nfunction LoginButton(props) {\n  return (\n    <button onClick={props.onClick}>\n      Login\n    </button>\n  );\n}\n\nfunction LogoutButton(props) {\n  return (\n    <button onClick={props.onClick}>\n      Logout\n    </button>\n  );\n}\n\nclass LoginMgnt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleLoginClick = this.handleLoginClick.bind(this);\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\n    this.state = { isLoggedIn: false };//Initially not loggged in\n  }\n\n  handleLoginClick() {\n    this.setState({ isLoggedIn: true });\n  }\n\n  handleLogoutClick() {\n    this.setState({ isLoggedIn: false });\n  }\n\n  render() {\n    const isLoggedIn = this.state.isLoggedIn;\n    let button;\n    if (isLoggedIn) { button = <LogoutButton onClick={this.handleLogoutClick} />; } else { button = <LoginButton onClick={this.handleLoginClick} />; }\n    return (\n      <div>\n        <Greeting isLoggedIn={isLoggedIn} />\n        {button}      </div>\n    );\n  }\n}\n*/\n\nfunction App() {\n  return (  \n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Login />          \n        </header>\n      </div>\n    </Router>    \n  );\n}\n\n\nexport default App;\n//REf :https://www.positronx.io/build-react-login-sign-up-ui-template-with-bootstrap-4/","/home/anurat/jiss/frontend/src/Auth.js",[],"/home/anurat/jiss/frontend/src/ProtectedRoute.js",["181"],"import { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Auth from './Auth';\nexport default function ProtectedRoute({children,...rest}) {\n    return (\n        <Route            \n            render={(props) =>\n                Auth.isLoggedIn() ? (                    \n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",                            \n                        }}\n                    />\n                )\n            }\n        />\n    )\n\n}\n","/home/anurat/jiss/frontend/src/reportWebVitals.js",[],"/home/anurat/jiss/frontend/src/components/judge.component.js",["182","183"],"import React, { Component } from \"react\";\nimport Dropdown from \"react-dropdown\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './judge.css';\nimport {BrowserRouter as Router  }from \"react-router-dom\";\nclass SearchById extends Component {\n    constructor(props){\n        super(props);\n        this.state = {ID:\"\"};\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event){\n        this.setState({[event.target.name]:event.target.value});\n    }\n    handleSubmit(event){\n        event.preventDefault();\n        alert(this.state.ID+\" was Submitted\");\n    }\n    render(){\n        return (\n            <form onSubmit = {this.handleSubmit}>\n                <label>\n                    Enter ID:   \n                    <input type=\"text\" onChange = {this.handleChange} name =\"ID\"/>\n                </label>\n                <input type = \"submit\" value = \"Search\"/>\n            </form>\n        );\n    }\n}\nclass SearchByKey extends Component {\n    constructor(props){\n        super(props);\n        this.state = {Keyword:\"\"};\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event){\n        this.setState({[event.target.name]:event.target.value});\n    }\n    handleSubmit(event){\n        event.preventDefault();\n        alert(this.state.Keyword+\" was Submitted\");\n    }\n    render(){\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Enter Keyword:   \n                    <input type=\"text\" onChange = {this.handleChange} name =\"Keyword\"/>\n                </label>\n                <input type = \"submit\" value = \"Search\"/>\n            </form>\n        );\n    }\n}\nexport default class Judge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {name: props.name,comp:null};         \n        this.OnCriteriaChange = this.OnCriteriaChange.bind(this);           \n    }\n    OnCriteriaChange(event){        \n        if(event.target.value===\"ById\"){            \n            this.setState({comp:<SearchById/>});            \n        }\n        else if(event.target.value===\"ByKeyword\"){\n            this.setState({comp:<SearchByKey/>});\n        }\n        else{\n            this.setState({comp:null});\n        }\n\n    }\n    render() {\n        \n        return (\n            <Router>\n            <div className=\"Judge\">\n                <div className=\"Judge-header\">\n                    <h1>Welcome, {this.state.name}</h1>\n                    <br />  \n                    Search Old Case:                    \n                    <select className = \"Judge-dropdown-header\" defaultValue=\"Option-Select\" onChange={this.OnCriteriaChange}>\n                        <option value  = \"Option-Select\" >Select An Option</option>\n                        <option value  = \"ById\" >Search By ID</option>\n                        <option value  = \"ByKeyword\">Search By Keyword</option>\n                    </select>\n                    {this.state.comp}                    \n                </div>\n            </div>\n            </Router>\n        );\n    }\n}","/home/anurat/jiss/frontend/src/components/nvbar.components.js",[],"/home/anurat/jiss/frontend/src/components/lawyer.component.js",["184"],"import React, { Component } from \"react\";\nimport Dropdown from \"react-dropdown\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './lawyer.css';\nimport {BrowserRouter as Router  }from \"react-router-dom\";\nclass SearchById extends Component {\n    constructor(props){\n        super(props);\n        this.state = {ID:\"\"};\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event){\n        this.setState({[event.target.name]:event.target.value});\n    }\n    handleSubmit(event){\n        event.preventDefault();\n        alert(this.state.ID+\" was Submitted\");\n    }\n    render(){\n        return (\n            <form onSubmit = {this.handleSubmit}>\n                <label>\n                    Enter ID:   \n                    <input type=\"text\" onChange = {this.handleChange} name =\"ID\"/>\n                </label>\n                <input type = \"submit\" value = \"Search\"/>\n            </form>\n        );\n    }\n}\nclass SearchByKey extends Component {\n    constructor(props){\n        super(props);\n        this.state = {Keyword:\"\"};\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event){\n        this.setState({[event.target.name]:event.target.value});\n    }\n    handleSubmit(event){\n        event.preventDefault();\n        alert(this.state.Keyword+\" was Submitted\");\n    }\n    render(){\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Enter Keyword:   \n                    <input type=\"text\" onChange = {this.handleChange} name =\"Keyword\"/>\n                </label>\n                <input type = \"submit\" value = \"Search\"/>\n            </form>\n        );\n    }\n}\nexport default class Lawyer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {name: props.name,comp:null};         \n        this.OnCriteriaChange = this.OnCriteriaChange.bind(this);           \n    }\n    OnCriteriaChange(event){        \n        if(event.target.value===\"ById\"){            \n            this.setState({comp:<SearchById/>});            \n        }\n        else if(event.target.value===\"ByKeyword\"){\n            this.setState({comp:<SearchByKey/>});\n        }\n        else{\n            this.setState({comp:null});\n        }\n\n    }\n    render() {\n        \n        return (\n            <Router>\n            <div className=\"Lawyer\">\n                <div className=\"Lawyer-header\">\n                    <h1>Welcome, {this.state.name}</h1>\n                    <br />  \n                    Search Old Case:                    \n                    <select className = \"Lawyer-dropdown-header\" defaultValue=\"Option-Select\" onChange={this.OnCriteriaChange}>\n                        <option value  = \"Option-Select\" >Select An Option</option>\n                        <option value  = \"ById\" >Search By ID</option>\n                        <option value  = \"ByKeyword\">Search By Keyword</option>\n                    </select>\n                    {this.state.comp}\n                    <DatePicker/>\n                </div>\n            </div>\n            </Router>\n        );\n    }\n}","/home/anurat/jiss/frontend/src/components/registrar.component.js",["185"],"import React, { Component } from \"react\";\n\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nexport default class Registrar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { name: props.name, comp: null };\n    }\n\n    render() {\n\n        return (\n            <Router>\n                <div className=\"Registrar\">\n                    <div className=\"Registrar-header\">\n                        <h1>Welcome, {this.state.name}</h1>\n                        <br />\n                        <br />\n                        <form>\n                            Add User:\n                        <select className=\"Registrar-dropdown-header\" defaultValue=\"Option-Select\" >\n                                <option value=\"Option-Select\" >Select An Option</option>\n                                <option value=\"Lawyer\" >Lawyer</option>\n                                <option value=\"Judge\">Judge</option>\n                            </select>\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\">Add Selected User</button>\n                        </form>\n                        <br />\n                        <br />\n                        <form>\n                            Delete User:\n                            <select className=\"Registrar-dropdown-header\" defaultValue=\"Option-Select\" >\n                                <option value=\"Option-Select\" >Select An Option</option>\n                                <option value=\"Lawyer\" >Lawyer</option>\n                                <option value=\"Judge\">Judge</option>\n                            </select>\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\">Add Selected User</button>\n                        </form>\n                        <br />\n                        <br />\n                        <button >Entry Case Report:</button>\n                        <br />\n                        <br />\n                        Search free Slots:<br />\n                        Enter Day: <DatePicker />\n                        <br />\n                        <br />\n                        <h2>Query Section</h2>\n                        <br />\n                        { /**\n                        *The currently pending court cases\nThe cases that have been resolved over any given time\nThe cases that are coming up for hearing on a particular date\nThe status of any particular case identified by the CIN.\n\n                       */}\n                        <form>\n                            Enter Case ID to Query:\n                            <input type=\"text\" />\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\">Add Selected User</button>\n                        </form>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}","/home/anurat/jiss/frontend/src/components/login.component.js",[],"/home/anurat/JISS/frontend/src/index.js",["186","187","188","189","190"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n\n\nimport reportWebVitals from './reportWebVitals';\nimport {\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute\"\nReactDOM.render(\n  <Router>\n    <App/>\n  </Router >\n  ,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["191","192"],"/home/anurat/JISS/frontend/src/Auth.js",[],"/home/anurat/JISS/frontend/src/App.js",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211"],"import './App.css';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Auth from './Auth';\nimport Navbar from \"./components/nvbar.components\";\nimport axios from 'axios';\nimport Judge from \"./components/judge.component\";\nimport Lawyer from \"./components/lawyer.component\";\nimport Registrar from \"./components/registrar.component\";\nimport CourtCase from \"./components/court_case.component\";\nimport Home from \"./components/home\";\n/**\n * Main File Integrating all stuff\n */\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport Login from \"./components/login.component\";\nimport ViewFreeSlot from './components/viewfreeslot.component';\n\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { logged_in: \"No\", usr_type: \"None\", usr_name: \"None\", usr_due_amt: \"0\" };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleDueAmt = this.handleDueAmt.bind(this);\n  }\n  handleLogin(props) {\n\n    if (props.login_status == \"1\") {\n      this.setState({ logged_in: \"Yes\", usr_type: props.user_type, usr_name: props.nameofuser, usr_due_amt: props.due_amt });\n    }\n  }\n  handleDueAmt(props) {\n    if (this.state.logged_in == \"Yes\" && this.state.usr_type == \"Lawyer\") {\n      this.setState({ usr_due_amt: props.due_amt });\n      console.log('App.js  :: ', this.state.usr_due_amt);\n    }\n  }\n  handleLogout(e) {\n    console.log(\"Handing Logout\");\n    axios.post(\"/api/logout\", { withCredentials: true })\n      .then(res => {\n        if (res.data.logout_status == \"1\") {\n          this.setState({ logged_in: \"No\", usr_type: \"None\", usr_name: \"None\" });\n        }\n\n      })\n      .catch(err => {\n        err.response ? alert('Error in Server ' + err.response.status) : console.log(err);\n      });\n    \n\n\n  }\n  //fetch(\"/api/account\").then(res => res.json()).then(res => { console.log(res); });\n  //axios.post('api/logout',null)\n  LoggedIn() {\n    //For checking if user is logged in\n    axios.get(\"/api/isLoggedIn\", { withCredentials: true })\n      .then(res => {\n        if (res.data.login_status == '1') {\n          this.setState({\n            logged_in: \"Yes\",\n            usr_type: res.data.user_type,\n            usr_name: res.data.nameofuser,\n            usr_due_amt: res.data.due_amt\n          });\n        }\n        else if (this.state.logged_in == \"Yes\" & res.data.login_status == '0') {\n          this.setState({ login: \"No\", usr_type: \"None\" });\n        }\n      });\n  }\n  componentDidMount() {\n    this.LoggedIn();\n  }\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar LoginStatus={this.logged_in} handleLogout={this.handleLogout} />\n          <header >\n\n            <Switch>\n              {/**Later all the routes which need to be protected will be changed to protected routes */}\n              <Route exact path=\"/home\" ><Home user=\"ABCD\" isLoggedIn={this.state.logged_in} handlelogout={this.handleLogout} /></Route>{/**For testing ProtectedRoute */}\n              <Route exact path=\"/login\">\n                {\n                  (this.state.logged_in == \"Yes\") ?\n                    (this.state.usr_type == \"Registrar\") ?\n                      <Redirect to=\"/userType-registrar\" />\n                      :\n                      (this.state.usr_type == \"Lawyer\") ?\n                        <Redirect to=\"/userType-lawyer\" />\n                        : (this.state.usr_type == \"Judge\") ?\n                          <Redirect to=\"/userType-judge\" />\n                          : null\n                    : <Login handlelogin={this.handleLogin} />\n                }\n\n              </Route>\n              <Route exact path=\"/userType-judge\">\n                {\n                  this.state.logged_in == \"Yes\" ?\n                    <Judge name={this.state.usr_name} handlelogout={this.handleLogout} />\n                    : <Redirect to=\"/login\" />\n                }\n              </Route>\n              <Route exact path=\"/userType-lawyer\">\n                {\n                  this.state.logged_in == \"Yes\" ?\n                    <Lawyer name={this.state.usr_name} due_amt={this.state.usr_due_amt} handleDueAmt={this.handleDueAmt} handlelogout={this.handleLogout} />\n                    : <Redirect to=\"/login\" />\n                }\n              </Route>\n              <Route exact path=\"/userType-registrar\">\n                {\n                  this.state.logged_in == \"Yes\" ?\n                    <Registrar name={this.state.usr_name} handlelogout={this.handleLogout} />\n                    : <Redirect to=\"/login\" />\n                }\n              </Route>\n              <Route exact path=\"/case-report\"><div>Hi<CourtCase /></div></Route>\n              <Route exact path=\"/assignslot/:cin\"\n                render={\n                  (props) => (\n                    (this.state.logged_in == \"Yes\") ?\n                      (this.state.usr_type == \"Registrar\") ?\n                        <ViewFreeSlot {...props} goback=\"/userType-registrar\" />\n                        : <Login handlelogin={this.handleLogin} />\n                      : <Login handlelogin={this.handleLogin} />\n                  )\n                }\n              />\n\n            </Switch>\n          </header>\n        </div>\n      </Router >\n    );\n  }\n}\n\n\n\nexport default App;\n//REf :https://www.positronx.io/build-react-login-sign-up-ui-template-with-bootstrap-4/\n//TODO Judge Query By Key","/home/anurat/JISS/frontend/src/ProtectedRoute.js",["212"],"import { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Auth from './Auth';\nexport default function ProtectedRoute({children,...rest}) {\n    return (\n        <Route            \n            render={(props) =>\n                Auth() ? (                    \n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",                            \n                        }}\n                    />\n                )\n            }\n        />\n    )\n\n}\n","/home/anurat/JISS/frontend/src/reportWebVitals.js",[],"/home/anurat/JISS/frontend/src/components/nvbar.components.js",["213"],"import React, { Component } from \"react\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nexport default class Navbar extends Component {\n    constructor(props)\n    {\n        super(props);\n    }\n    render() {\n\n        return (\n\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-primary\">\n                <a class=\"navbar-brand\" href=\"/login\">Login</a>\n                <a class=\"navbar-brand\" href=\"/home\">Home</a>\n                <a class =\"navbar-brand\" href = \"/userType-judge\">Dashboard</a>                \n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n                <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n                </div>\n            </nav>\n\n        );\n    }\n}","/home/anurat/JISS/frontend/src/components/lawyer.component.js",["214","215","216","217","218","219","220","221","222","223","224"],"import React, { Component } from \"react\";\nimport Dropdown from \"react-dropdown\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './lawyer.css';\nimport LogoutButton from \"./logoutbutton\"\nimport CourtCase from \"./court_case.component\"\nimport DispCIN from './dispCIN.component'\nimport axios from 'axios';\nimport {\n    useHistory,\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect\n} from \"react-router-dom\";\n\n\nclass SearchById extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ID: \"\", ID_error: false };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n        if (event.target.value == \"\") {\n            this.setState({ [event.target.name + '_error']: true });\n        }\n        else {\n            this.setState({ [event.target.name + '_error']: false });\n        }\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n\n        var flag = false;\n        if (this.state.ID == \"\") {\n            this.setState({ ID_error: true });\n            flag = true;\n        }\n        else {\n            this.setState({ ID_error: false });\n        }\n        if (!flag) {\n            alert(this.state.ID + \" was Submitted\");\n            const requestOptions = {\n                'cin': this.state.ID,\n            };\n            axios.post('/api/searchbyId', requestOptions)\n                .then(res => {\n                    console.log(res.data);\n                    this.props.handleviewCase(res.data.case_details);\n                    this.props.handleDueAmt({ 'due_amt': res.data.due_amt });\n                    /*\n                    if (res.data.confirm == \"1\") {\n                        this.props.handleviewCase(res.data.case_details);\n                        this.props.handleDueAmt({ 'due_amt': res.data.due_amt });\n                    }\n                    else {\n                        alert(res.data.message);\n                    }\n                    */\n\n                })\n                .catch(err => {\n                    err.response ? alert('Error in Server ' + err.response.status) : console.log(err);\n                });\n        }\n\n\n    }\n    render() {\n        return (\n            <Router>\n\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Enter ID:\n                    <input type=\"text\" onChange={this.handleChange} name=\"ID\" />\n                        {this.state.ID_error ? <div style={{ color: \"red\" }}>CIN cannot be Empty</div> : \"\"}\n                    </label>\n                    <input type=\"submit\" value=\"Search\" />\n                </form>\n            </Router>\n        );\n    }\n}\nclass SearchByKey extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { Keyword: \"\", Keyword_error: false };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n        if (event.target.value == \"\") {\n            this.setState({ [event.target.name + '_error']: true });\n        }\n        else {\n            this.setState({ [event.target.name + '_error']: false });\n        }\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        var flag = false;\n        if (this.state.Keyword == \"\") {\n            this.setState({ Keyword_error: true });\n            flag = true;\n        }\n        else {\n            this.setState({ Keyword_error: false });\n        }\n        if (!flag) {\n            alert(this.state.Keyword + \" was Submitted\");\n            const requestOptions = {\n                'key': this.state.Keyword,\n            };\n            axios.post('/api/searchbyKey', requestOptions)\n                .then(res => {\n                    console.log(res.data);\n                    this.props.handleviewCaseId(res.data.cin_list);\n                    this.props.handleDueAmt({ 'due_amt': res.data.due_amt });\n                });\n        }\n\n    }\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Enter Keyword:\n                    <input type=\"text\" onChange={this.handleChange} name=\"Keyword\" />\n                    {this.state.Keyword_error ? <div style={{ color: \"red\" }}>Keyword cannot be Empty</div> : \"\"}\n                </label>\n                <input type=\"submit\" value=\"Search\" />\n            </form>\n        );\n    }\n}\nclass Lawyer extends Component {\n    constructor(props) {\n        super(props);\n        console.log(props);\n        this.state = {\n            name: props.name,\n            due_amt: props.due_amt,\n            comp: null,\n            curr_casedata: null,\n            searchrecv_id: false,\n            searchrecv_Key: false,\n            curr_caseIdList: []\n        };\n        this.OnCriteriaChange = this.OnCriteriaChange.bind(this);\n        this.handleviewCase = this.handleviewCase.bind(this);\n        this.handleviewCaseId = this.handleviewCaseId.bind(this);\n        this.goback = this.goback.bind(this);\n        this.handleviewreqCase = this.handleviewreqCase.bind(this);\n        this.handleDueAmt = this.handleDueAmt.bind(this);\n    }\n    handleDueAmt(props) {\n        this.setState({ due_amt: props.due_amt });\n        this.props.handleDueAmt(props);\n    }\n    handleviewreqCase(props) {\n        console.log(props);\n        alert(\"Searching for\" + props.data.cin);\n        const requestOptions = {\n            'cin': props.data.cin,\n        };\n        axios.post('/api/searchbyId', requestOptions)\n            .then(res => {\n                console.log(res.data);\n                this.handleviewCase(res.data.case_details);\n            });\n    }\n    goback() {\n        if (this.state.searchrecv_Key) {\n            if (this.state.searchrecv_id) {\n                this.setState({ searchrecv_id: false });\n            }\n            else {\n                this.setState({ searchrecv_Key: false });\n            }\n        }\n        else {\n            this.setState({ searchrecv_id: false });\n        }\n\n    }\n\n    OnCriteriaChange(event) {\n        if (event.target.value === \"ById\") {\n            this.setState({ comp: <SearchById handleviewCase={this.handleviewCase} handleDueAmt={this.handleDueAmt} /> });\n        }\n        else if (event.target.value === \"ByKeyword\") {\n            this.setState({ comp: <SearchByKey handleviewCaseId={this.handleviewCaseId} handleDueAmt={this.handleDueAmt} /> });\n        }\n        else {\n            this.setState({ comp: null });\n        }\n\n    }\n\n    handleviewCase(props) {\n        this.setState({ searchrecv_id: true, curr_casedata: props });\n        //console.log(this.state.curr_casedata);\n    }\n    handleviewCaseId(props) {\n        /**\n         * props : List of all {'cin':'<CIN>','crime_type':'<crime_type>'}\n         */\n        this.setState({ curr_caseIdList: props, searchrecv_Key: true, });\n        console.log('Handle View Case Lawyer: ', this.state.curr_caseIdList);\n    }\n    render() {\n\n        if (this.state.searchrecv_id) {\n            return (<CourtCase case_data={this.state.curr_casedata} goback={this.goback} />);\n        }\n        else if (this.state.searchrecv_Key) {\n            return (<DispCIN cin_list={this.state.curr_caseIdList} handleselect={this.handleviewreqCase} goback={this.goback} />);\n        }\n        return (\n            <Router>\n\n                <div className=\"Lawyer\">\n                    <div className=\"Lawyer-header\">\n                        <p>Due Amount :{this.state.due_amt}</p>\n                        <br /><br />\n                        <h1>Welcome, {this.state.name}</h1>\n                        <br />\n                    Search Old Case:\n                    <select className=\"Lawyer-dropdown-header\" defaultValue=\"Option-Select\" onChange={this.OnCriteriaChange}>\n                            <option value=\"Option-Select\" >Select An Option</option>\n                            <option value=\"ById\" >Search By ID</option>\n                            <option value=\"ByKeyword\">Search By Keyword</option>\n                        </select>\n                        {this.state.comp}\n\n                        <LogoutButton handlelogout={this.props.handlelogout} />\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\nexport default Lawyer;","/home/anurat/JISS/frontend/src/components/judge.component.js",["225","226","227","228","229","230","231","232","233","234","235"],"import React, { Component } from \"react\";\nimport Dropdown from \"react-dropdown\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './judge.css';\nimport LogoutButton from \"./logoutbutton\"\nimport CourtCase from \"./court_case.component\"\nimport DispCIN from './dispCIN.component'\nimport axios from 'axios';\nimport {\n    useHistory,\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect\n} from \"react-router-dom\";\n\nclass SearchById extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { ID: \"\", ID_error: false };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n        if (event.target.value == \"\") {\n            this.setState({ [event.target.name + '_error']: true });\n        }\n        else {\n            this.setState({ [event.target.name + '_error']: false });\n        }\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n\n        var flag = false;\n        if (this.state.ID == \"\") {\n            this.setState({ ID_error: true });\n            flag = true;\n        }\n        else {\n            this.setState({ ID_error: false });\n        }\n        if (!flag) {\n            alert(this.state.ID + \" was Submitted\");\n            const requestOptions = {\n                'cin': this.state.ID,\n            };\n            axios.post('/api/searchbyId', requestOptions)\n                .then(res => {\n                    console.log(res.data);\n                    this.props.handleviewCase(res.data.case_details); \n                    /*\n                    if(res.data.confirm==\"1\")\n                    {\n                        this.props.handleviewCase(res.data.case_details); \n                    }\n                    else\n                    {\n                        alert(res.data.message);\n                    }\n                    */\n                                       \n                })\n                .catch(err => {\n                    err.response ? alert('Error in Server ' + err.response.status) : console.log(err);\n                });\n        }\n\n\n\n    }\n    render() {\n        return (\n            <Router>\n\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Enter ID:\n                    <input type=\"text\" onChange={this.handleChange} name=\"ID\" />\n                    {this.state.ID_error ? <div style={{ color: \"red\" }}>CIN cannot be Empty</div> : \"\"}\n                    </label>\n                    <input type=\"submit\" value=\"Search\" />\n                </form>\n            </Router>\n        );\n    }\n}\nclass SearchByKey extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { Keyword: \"\", Keyword_error: false };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n        if (event.target.value == \"\") {\n            this.setState({ [event.target.name + '_error']: true });\n        }\n        else {\n            this.setState({ [event.target.name + '_error']: false });\n        }\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        var flag = false;\n        if (this.state.Keyword == \"\") {\n            this.setState({ Keyword_error: true });\n            flag = true;\n        }\n        else {\n            this.setState({ Keyword_error: false });\n        }\n        if (!flag) {\n            alert(this.state.Keyword + \" was Submitted\");\n            const requestOptions = {\n                'key': this.state.Keyword,\n            };\n            axios.post('/api/searchbyKey', requestOptions)\n                .then(res => {\n                    console.log(res.data);\n                    this.props.handleviewCaseId(res.data.cin_list);                    \n                });\n        }\n\n    }\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Enter Keyword:\n                    <input type=\"text\" onChange={this.handleChange} name=\"Keyword\" />\n                    {this.state.Keyword_error ? <div style={{ color: \"red\" }}>Keyword cannot be Empty</div> : \"\"}\n                </label>\n                <input type=\"submit\" value=\"Search\" />\n            </form>\n        );\n    }\n}\nclass Judge extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: props.name,\n            comp: null, \n            curr_casedata: null, \n            searchrecv_id: false,             \n            searchrecv_Key:false,\n            curr_caseIdList:[]\n        };\n        this.OnCriteriaChange = this.OnCriteriaChange.bind(this);\n        this.handleviewCase = this.handleviewCase.bind(this);\n        this.handleviewCaseId = this.handleviewCaseId.bind(this);\n        this.goback = this.goback.bind(this);\n        this.handleviewreqCase = this.handleviewreqCase.bind(this);\n    }\n    handleviewreqCase(props)\n    {\n        console.log(props);\n        alert(\"Getting Details for\"+props.data.cin);\n        const requestOptions = {\n            'cin': props.data.cin,\n        };\n        axios.post('/api/searchbyId', requestOptions)\n            .then(res => {\n                console.log(res.data);\n                this.handleviewCase(res.data.case_details);\n            });\n    }\n    goback() {\n        if(this.state.searchrecv_Key)\n        {\n            if(this.state.searchrecv_id)\n            {\n                this.setState({searchrecv_id: false});\n            }\n            else\n            {\n                this.setState({searchrecv_Key:false});\n            }\n        }\n        else\n        {\n            this.setState({searchrecv_id:false});\n        }\n        \n    }\n    OnCriteriaChange(event) {\n        if (event.target.value === \"ById\") {\n            this.setState({ comp: <SearchById handleviewCase={this.handleviewCase} /> });\n        }\n        else if (event.target.value === \"ByKeyword\") {\n            this.setState({ comp: <SearchByKey handleviewCaseId={this.handleviewCaseId} /> });\n        }\n        else {\n            this.setState({ comp: null });\n        }\n\n    }\n    \n    handleviewCase(props) {\n        this.setState({ searchrecv_id: true, curr_casedata: props });\n        //console.log(this.state.curr_casedata);\n    }\n    handleviewCaseId(props) {\n        /**\n         * props : List of all {'cin':'<CIN>','crime_type':'<crime_type>'}\n         */\n        this.setState({  curr_caseIdList: props ,searchrecv_Key: true,});\n        console.log('Handle View Case Judge: ',this.state.curr_caseIdList);\n    }\n    render() {\n        \n        if (this.state.searchrecv_id) {            \n            return (<CourtCase case_data={this.state.curr_casedata} goback={this.goback} />);\n        }\n        else if (this.state.searchrecv_Key)\n        {\n            return (<DispCIN cin_list={this.state.curr_caseIdList} handleselect = {this.handleviewreqCase} goback ={this.goback}/>);\n        }\n        return (\n            <Router>\n\n                <div className=\"Judge\">\n                    <div className=\"Judge-header\">\n                        <h1>Welcome, {this.state.name}</h1>\n                        <br />\n                    Search Old Case:\n                    <select className=\"Judge-dropdown-header\" defaultValue=\"Option-Select\" onChange={this.OnCriteriaChange}>\n                            <option value=\"Option-Select\" >Select An Option</option>\n                            <option value=\"ById\" >Search By ID</option>\n                            <option value=\"ByKeyword\">Search By Keyword</option>\n                        </select>\n                        {this.state.comp}\n\n                        <LogoutButton handlelogout={this.props.handlelogout} />\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\nexport default Judge;","/home/anurat/JISS/frontend/src/components/registrar.component.js",["236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251"],"import React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\n\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router,Redirect ,withRouter} from \"react-router-dom\";\nimport LogoutButton from \"./logoutbutton\"\nimport AddUser from \"./addUser.component\";\nimport RemoveUser from \"./removeUser.component\";\nimport ViewFreeSlot from \"./viewfreeslot.component\";\nimport QueryResolved from \"./resolvedCases.component\";\nimport QueryStatus from \"./queryStatus.component\";\nimport ViewPendingCases from \"./viewPendingCases.component\";\nimport ViewUpcomingCasesByDate from \"./viewUpcomingByDate.component\"\nimport CloseCase from \"./closecase.component\"\nimport AdjForm from './enterAdjDetails.component'\nimport AddCase from \"./createcase.component\"\nclass Registrar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { name: props.name, comp: null, selected_usecase: \"None\",comp:null};\n        this.OnCriteriaChange = this.OnCriteriaChange.bind(this);\n        this.goback = this.goback.bind(this);\n    }\n    goback()\n    {\n        this.setState({selected_usecase:\"None\"});\n    }\n    OnCriteriaChange(event) {\n        this.setState({ selected_usecase: event.target.value });\n    }\n    render() {\n        \n        if (this.state.selected_usecase != \"None\") {\n            if (this.state.selected_usecase == \"AddUser\") {\n                return (<AddUser goback={this.goback}/>);\n            }\n            else if (this.state.selected_usecase == \"RemoveUser\") {\n                return (<RemoveUser goback={this.goback}/>);\n            }\n            else if (this.state.selected_usecase == \"ViewFreeSlots\") {\n                return (<ViewFreeSlot goback = {this.goback}/>   );\n            }\n            else if (this.state.selected_usecase == \"QueryStatus\") {\n                return (\n                    <Router><QueryStatus goback ={this.goback}/></Router>\n                );\n            }\n            else if (this.state.selected_usecase == \"ViewPendingCases\") {\n                return (\n                    <Router>\n                        \n                        <ViewPendingCases handleselect={(props)=>{this.props.history.push(`/assignslot/${props.data.cin}`)}} goback={this.goback}/>                        \n                        {this.state.comp}\n                    </Router>\n                \n                );//TODO\n            }\n            else if (this.state.selected_usecase == \"ViewResolvedCases\") {\n                return (<QueryResolved goback={this.goback}/>);\n            }\n            else if (this.state.selected_usecase == \"ViewUpcomingCasesByDate\") {\n                return (<ViewUpcomingCasesByDate goback={this.goback}/>)\n            }\n            else if (this.state.selected_usecase == \"CloseCase\") {\n                return (<CloseCase goback={this.goback}/>)\n            }\n            else if (this.state.selected_usecase==\"EntryAdj\"){\n                return (<AdjForm goback={this.goback}/>);\n            }\n            else if (this.state.selected_usecase==\"AddCase\"){\n                return (<AddCase goback={this.goback}/>);\n            }\n\n        }\n        else {\n            return (\n                <Router>\n                    <div className=\"Registrar\">\n                        <div className=\"Registrar-header\">\n                            <p> Welcome , {this.state.name}</p>\n                            <select className=\"Registrar-dropdown-header\" defaultValue=\"None\" onChange={this.OnCriteriaChange}>\n                                <option value=\"None\" >Select An Option</option>\n                                <option value=\"AddUser\" >Add User</option>\n                                <option value=\"RemoveUser\">Remove User</option>\n                                <option value=\"ViewFreeSlots\">View Free Slots</option>\n                                <option value=\"ViewPendingCases\">View Pending Cases</option>\n                                <option value=\"ViewResolvedCases\">View Resolved Cases</option>\n                                <option value=\"ViewUpcomingCasesByDate\">View Upcoming Cases On a Date</option>\n                                <option value=\"QueryStatus\">Query Status By CIN</option>\n                                <option value=\"EntryAdj\">Entry Adjournment Details</option>\n                                <option value=\"CloseCase\">Close Case</option>\n                                <option value=\"AddCase\">Add New Case</option>\n                            </select>\n                            <p />\n                            <LogoutButton handlelogout={this.props.handlelogout} />\n                        </div>\n                    </div>\n                    \n                </Router>\n            );\n        }\n\n    }\n}\nexport default withRouter(Registrar);","/home/anurat/JISS/frontend/src/components/login.component.js",["252","253","254","255","256","257","258","259"],"import React, { Component } from \"react\";\nimport axios from 'axios';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './login.css';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    Redirect\n} from \"react-router-dom\";\n\nclass Welcome extends Component {\n    render() {\n        return (\n            <div ><h1>Welcome to JISS</h1></div>\n        );\n    }\n}\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { username: '', password: '', username_error: false, password_error: false };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ [event.target.name]: event.target.value });\n        if (event.target.value == \"\") {\n            this.setState({ [event.target.name + '_error']: true });\n        }\n    }\n    handleSubmit(event) {\n        //console.log('Submitting'); //For Debug\n        var errors = {\n            username_error: false,\n            password_error: true\n        };\n        var flag = false;\n\n        //Form Validation\n        if (this.state.username == \"\") {\n            this.setState({ username_error: true });\n            errors.username_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ username_error: false });\n            errors.username_error = false;\n        }\n\n        if (this.state.password == \"\") {\n            this.setState({ password_error: true });\n            errors.password_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ password_error: false });\n            errors.password_error = false;\n        }\n\n        if (!flag) {\n            //alert('A username was submitted: ' + this.state.username);\n            const requestOptions = {\n                'username': this.state.username, 'password': this.state.password\n            };\n            console.log(\"LoggingIn \")\n            axios.post('/api/login', requestOptions)\n                .then(res => {\n                    console.log(res.data);\n                    if(res.data.login_status==\"0\")\n                    {\n                        alert(\"Invalid Username or Password\");\n                    }\n                    this.props.handlelogin(res.data);\n\n                });\n            event.preventDefault();\n        }\n\n\n\n\n    }\n    render() {\n\n        if (this.state.login) {\n            return (<Redirect to=\"/home\" />)\n        }\n        else {\n            return (\n                <div className=\"Login\">\n                    <header className=\"Login-header\">\n                        <Welcome />\n                        <form onSubmit={this.handleSubmit}>\n                            <h3>Please Sign In</h3>\n\n                            <div className=\"form-group\">\n                                <label>Username</label>\n                                <input type=\"text\" name=\"username\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Username\" />\n                                {this.state.username_error ? <div style={{ color: \"red\" }}>Username cannot be Empty</div> : \"\"}\n                            </div>\n                            <br />\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input type=\"password\" name=\"password\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter password\" />\n                                {this.state.password_error ? <div style={{ color: \"red\" }}>Password cannot be Empty</div> : \"\"}\n                            </div>\n                            {/*\n                    <div className=\"form-group\">\n                        <div className=\"custom-control custom-checkbox\">\n                            <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n                            <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n                        </div>\n                    </div>*/}\n\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                            {/*<p className=\"forgot-password text-right\">\n                        Forgot <a href=\"#\">password?</a>\n                </p>*/}\n                        </form>\n                    </header>\n                </div>\n            );\n        }\n\n    }\n}","/home/anurat/JISS/frontend/src/components/court_case.component.js",["260"],"import GridLayout from 'react-grid-layout';\nimport React, { Component } from \"react\";\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham-dark.css';\n\nimport Table from \"./table.js\";\nimport \"./court-case.css\";\n\nexport default class CourtCase extends Component {\n  constructor(props) {\n    super(props);\n    //Details of the Court Case\n    if(props.case_data==null)\n    {\n      this.state = {\n        def_name: \"\",\n        def_addr: \"\",\n        pros_name: \"\",        \n        crime_type: \"\",\n        crime_date: \"\",\n        crime_loc: \"\",\n        arresting_off_name: \"\",\n        date_arrest: \"\",\n        CIN: \"\",\n        date_hearing: \"\",\n        latest_hearing_date: \"\",\n        case_hearing_details: [{ date: \"Date\", reason: \"Reason\" }],\n        name_pres_judge: \"\",\n        start_date: \"\",\n        expected_completion_of_trial: \"\"\n      }\n    }\n    else\n    {\n      try {\n        this.state = {\n          def_name: props.case_data.def_name,\n          def_addr: props.case_data.def_addr,\n          pros_name: props.case_data.pros_name,          \n          crime_type: props.case_data.crime_type,\n          crime_date: props.case_data.crime_date,\n          crime_loc: props.case_data.crime_loc,\n          arresting_off_name: props.case_data.arresting_off_name,\n          date_arrest: props.case_data.date_arrest,\n          CIN: props.case_data.CIN,\n          date_hearing: props.case_data.date_hearing,\n          latest_hearing_date: props.case_data.latest_hearing_date,\n          case_hearing_details: props.case_data.adj_details,\n          name_pres_judge: props.case_data.name_pres_judge,\n          start_date: props.case_data.start_date,\n          expected_completion_of_trial: props.case_data.expected_completion_date\n        };\n        console.log('Adjourn Details : ',this.state.case_hearing_details);\n        \n      } catch (error) {\n        console.log(\"Error in Getting Case Data\");\n        \n      }\n      \n    }\n    \n  }\n  render() {\n    //fetch(\"/api/account\").then(res => res.json()).then(res => { console.log(res); });\n    // layout is an array of objects, see the demo for more complete usage\n    const layout = [\n      { i: '1', x: 0, y: 0, w: 5, h: 2, static: true },\n      { i: '2', x: 10, y: 0, w: 5, h: 2, static: true },\n      { i: '3', x: 2, y: 10, w: 10, h: 2, static: true }\n    ];\n    const columns = [{\n      Header: 'Date',\n      accessor: 'date'\n    }, {\n      Header: 'Reason',\n      accessor: 'reason'\n    }]\n    console.log(columns.length);\n    return (\n      <div className=\"CourtCase\">\n        <GridLayout layout={layout} cols={12} rowHeight={30} width={1200}>\n          <div key=\"1\">\n            <h1>Case : {this.state.CIN}</h1>\n            <b>Defendent Name :</b> {this.state.def_name}\n            <br />\n            <b>Defendent Address :</b> {this.state.def_addr}\n            <br /><br />\n            <b>Prosecutor Name :</b> {this.state.pros_name}            \n            <br /><br />\n            <b>Hearing Date: </b>{this.state.date_hearing}\n            <br />\n            <b>Latest Hearing Date: </b>{this.state.latest_hearing_date}\n          </div>\n          <div key=\"2\">\n            <b>Crime Type :</b>  {this.state.crime_type}\n            <br />\n            <b>Crime Date :</b>  {this.state.crime_date}\n            <br />\n            <b>Crime Location : </b>{this.state.crime_loc}\n            <br />\n            <b>Name of Arresting Officer :</b>{this.state.arresting_off_name}\n            <br />\n            <b>Date of Arrest :</b> {this.state.date_arrest}<br />\n            <b>Starting Date of Hearing: </b>{this.state.start_date}<br />\n            <b>Expected Completion of Trial: </b>{this.state.expected_completion_of_trial}<br />\n          </div>\n          <div key=\"3\">\n            <h2>Summary of Hearings</h2>\n\n            \n            <div className=\"ag-theme-balham-dark\" style={{ height: 300, width: 600 }}>                \n                    <AgGridReact                       \n                        rowData={this.state.case_hearing_details}>\n                        <AgGridColumn field=\"date\"></AgGridColumn>\n                        <AgGridColumn field=\"reason\"></AgGridColumn>\n                    </AgGridReact>\n              </div>\n\n          </div>\n        </GridLayout>\n        <div style={{ display: \"flex\" }}>\n          <button\n            onClick={this.props.goback}\n            style={{ marginLeft: \"auto\" }}\n          >\n            Go Back\n        </button>\n        </div>\n        \n      </div>\n    )\n  }\n}","/home/anurat/JISS/frontend/src/components/table.js",["261"],"//Ref: https://blog.logrocket.com/complete-guide-building-smart-data-table-react/\n\nimport React from \"react\";\nimport { useTable } from \"react-table\";\n\nexport default function Table({ columns, data }) {\n\n    return (\n        <table>\n            <tr>\n                {columns.map((value, index) => {\n                    return (<th>{value.Header}</th>)\n                })}\n            </tr>\n            {data.map((value,index)=>{\n                return <tr>{columns.map((val,ind)=>{\n                    return <td>{value[val.accessor]}</td>\n                })}</tr>\n            })}\n\n        </table>\n    )\n}","/home/anurat/JISS/frontend/src/components/home.js",["262"],"import LogoutButton from \"./logoutbutton\"\n\nexport default function Home(props) {\n    return (\n        <div>\n            <h1>Welcome to Judiciary Management System, {props.user}</h1>\n            {props.isLoggedIn==\"Yes\"?<LogoutButton handlelogout={props.handlelogout}/>:null}\n            \n        </div>\n    );\n}","/home/anurat/JISS/frontend/src/components/logoutbutton.js",[],"/home/anurat/JISS/frontend/src/components/dispCIN.component.js",["263","264","265","266"],"import GridLayout from 'react-grid-layout';\nimport React, { Component, useMemo, useState, useEffect } from \"react\";\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham-dark.css';\nimport './dispCIN.css';\n\nexport default class DispCIN extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"DISP:: \",props);\n        //Details of the Court Case\n        if (props.cin_list == null) {\n            //default values for testings \n            this.state = {\n                cin_list_data: [{ cin: \"1\", crime_type: \"Theft\" }, { cin: \"2\", crime_type: \"theft\" }],\n                selected_cin: \"\"\n            }\n            this.handleClick = this.handleClick.bind(this);\n        }\n        else {\n            try {\n                this.state = {\n                    cin_list_data: props.cin_list,\n                    selected_cin: \"\"\n                };\n                console.log('DISP CIN:: ',this.state.cin_list)\n\n            } catch (error) {\n                console.log(\"Error in Getting Case Data\");\n            }\n\n        }\n\n    }\n    handleClick(e) {\n        console.log(e.data.cin);\n    }\n    render() {\n        return (\n            <div className=\"DispCIN-header\">\n                <div className=\"ag-theme-balham-dark\" style={{ height: 400, width: 600 }}>\n                {console.log(this.state.cin_list_data)}\n                    <AgGridReact                       \n                        rowData={this.state.cin_list_data}>\n                        <AgGridColumn onCellClicked={this.props.handleselect} field=\"cin\"></AgGridColumn>\n                        <AgGridColumn field=\"crime_type\"></AgGridColumn>\n                    </AgGridReact>\n                </div>\n                <button\n                    onClick={this.props.goback}\n                    style={{ marginLeft: \"auto\" }}\n                >\n                    Go Back\n                </button>\n            </div>\n        );\n\n    }\n}","/home/anurat/JISS/frontend/src/components/addUser.component.js",["267","268","269","270","271","272","273","274","275","276","277","278","279"],"import React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\nimport axios from 'axios';\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LogoutButton from \"./logoutbutton\"\nimport './form.css';\nexport default class AddUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            usr_name: \"\",\n            password: \"\",\n            usr_type: \"None\",\n            usr_addr: \"\",\n            usr_name_error: false,\n            username_error: false,\n            password_error: false,\n            usr_type_error: false,\n            usr_addr_error: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        var errors = {\n            usr_name_error: false,\n            username_error: false,\n            password_error: false,\n            usr_type_error: false,\n            usr_addr_error: false\n        }\n        //Validate Form input\n        if (this.state.usr_name == \"\") {\n            this.setState({ usr_name_error: true });\n            errors.usr_name_error = true;\n        }\n        else {\n            this.setState({ usr_name_error: false });\n            errors.usr_name_error = false;\n        }\n        if (this.state.password.length < 3) {\n            this.setState({ password_error: true });\n            errors.password_error = true;\n        }\n        else {\n            this.setState({ password_error: false });\n            errors.password_error = false;\n        }\n        if (this.state.username == \"\") {\n            this.setState({ username_error: true });\n            errors.username_error = true;\n        }\n        else {\n            this.setState({ username_error: false });\n            errors.username_error = false;\n        }\n        if (this.state.usr_type == \"None\") {\n            this.setState({ usr_type_error: true });\n            errors.usr_type_error = true;\n        }\n        else {\n            this.setState({ usr_type_error: false });\n            errors.usr_type_error = false;\n        }\n\n        if (this.state.usr_addr == \"\") {\n            this.setState({ usr_addr_error: true });\n            errors.usr_addr_error = true;\n        }\n        else {\n            this.setState({ usr_addr_error: false });\n            errors.usr_addr_error = false;\n        }\n\n        if (!(errors.usr_name_error || errors.password_error || errors.username_error || errors.usr_addr_error || errors.usr_type_error)) {\n            console.log('Data to be Sent : ', this.state);\n            const requestOptions = {\n                'username': this.state.username, 'password': this.state.password,\n                'name': this.state.usr_name, 'usr_type': this.state.usr_type,\n                'usr_addr': this.state.usr_addr\n            };\n            axios.post('/api/addUser', requestOptions)\n                .then(res => {\n                    console.log(res.data);\n                    if (res.data.add_status == \"0\") {\n                        alert(res.data.err_msg);\n                    }\n                    else {\n                        alert('User Added Successfully');\n                        // this.props.goback();//Optional\n                    }\n                })\n                .catch(err => {\n                    alert('Error in Server ' + err.response.status);\n                    console.log(err.response);\n                });\n        }\n\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value }, () => {\n            if (e.target.name == \"usr_type\") {\n                if (e.target.value == \"None\") {\n                    this.setState({ usr_type_error: true });\n                }\n                else {\n                    this.setState({ usr_type_error: false });\n                }\n            }\n            else if (e.target.name == \"password\") {\n                if (e.target.value.length < 3) {\n                    this.setState({ password_error: true });\n                }\n                else {\n                    this.setState({ password_error: false });\n                }\n            }\n            else {\n                if (e.target.value == \"\") {\n                    this.setState({ [e.target.name + \"_error\"]: true });\n                }\n                else {\n                    this.setState({ [e.target.name + \"_error\"]: false });\n                }\n            }\n        });\n\n    }\n    render() {\n        return (\n            <Router>\n                <div className=\"Registrar\">\n                    <div className=\"Registrar-header\">\n                        <button\n                            onClick={this.props.goback}\n                            style={{ marginLeft: \"auto\" }}\n                            className=\"btn btn-primary \"\n                        >\n                            Go Back\n                    </button>\n                        <form onSubmit={this.handleSubmit}>\n                            <h3>Add User</h3>\n\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input type=\"text\" name=\"usr_name\" onChange={this.handleChange} className=\"form-control\" placeholder=\"EnterName\" />\n                                {this.state.usr_name_error ? <div style={{ color: \"red\" }}>Name cannot be Empty</div> : \"\"}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>User Type:</label>\n                                <label>\n                                    <select className=\"form-control\" defaultValue=\"None\" name=\"usr_type\" onChange={this.handleChange}>\n                                        <option value=\"None\">Select User Type</option>\n                                        <option value=\"Lawyer\">Lawyer</option>\n                                        <option value=\"Judge\">Judge</option>\n                                    </select>\n                                </label>\n                                {this.state.usr_type_error ? <div style={{ color: \"red\" }}>User Type must be Selected</div> : \"\"}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>User Address</label>\n                                <input type=\"text\" name=\"usr_addr\" onChange={this.handleChange} className=\"form-control\" placeholder=\"EnterUserAddr\" />\n                                {this.state.usr_addr_error ? <div style={{ color: \"red\" }}>Address cannot be Empty</div> : \"\"}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Username</label>\n                                <input type=\"text\" name=\"username\" onChange={this.handleChange} className=\"form-control\" placeholder=\"EnterUsername\" />\n                                {this.state.username_error ? <div style={{ color: \"red\" }}>Username cannot be Empty</div> : \"\"}\n                            </div>\n                            <br />\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input type=\"password\" name=\"password\" onChange={this.handleChange} className=\"form-control\" placeholder=\"EnterPassword\" />\n                                {this.state.password_error ? <div style={{ color: \"red\" }}>At least 3 characters</div> : \"\"}\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}","/home/anurat/JISS/frontend/src/components/removeUser.component.js",["280","281","282","283","284","285","286","287"],"import React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\n\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham-dark.css';\nimport LogoutButton from \"./logoutbutton\"\nimport axios from \"axios\";\n\nfunction DispUserList(props) {\n    \n        console.log('Props ',props);\n        return (\n            <div className=\"ag-theme-balham-dark\" style={{ height: 400, width: 600 }}>\n                <AgGridReact\n                    rowData={props.usr_list}>\n                    <AgGridColumn onCellClicked={props.handleselect} field=\"username\"></AgGridColumn>\n                    <AgGridColumn field=\"name\"></AgGridColumn>\n                    <AgGridColumn field=\"usr_type\"></AgGridColumn>\n                </AgGridReact>\n            </div>\n        );\n    \n}\n\nexport default class RemoveUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            username_error: false,\n            comp: null,\n            usr_list: null\n        };\n        this.handleUserselect = this.handleUserselect.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.getuserList = this.getuserList.bind(this);\n        \n    }\n    \n    handleUserselect(props) {\n        console.log(props);\n        if(!props.data.username)\n        {\n            return;\n        }\n        alert(\"Removing \" + props.data.username);\n\n        const requestOptions = {\n            'username': props.data.username\n        };\n        axios.post('/api/removeUser', requestOptions)\n            .then(res => {\n                if (res.data.remove_status == \"1\") {\n                    alert('User ' + props.data.username + ' was removed successfully');\n                    if(this.state.comp!=null)\n                    {\n                        this.getuserList();\n                    }\n                }\n                else {\n                    alert(res.data.err_msg);\n                }\n            })\n            .catch(err => {\n                err.response ? alert('Error in Server ' + err.response.status) : console.log('Error', err);\n\n            });\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        if (this.state.username == \"\") {\n            this.setState({ username_error: true });\n        }\n        else {\n            const requestOptions = {\n                'username': this.state.username\n            }\n            axios.post('/api/removeUser', requestOptions)\n                .then(res => {\n                    if (res.data.remove_status == \"1\") {\n                        alert('User ' + this.state.username + ' was removed successfully');\n                        //this.props.goback();//Optional                        \n                        if(this.state.comp!=null){\n                            this.getuserList();\n                        }                        \n                    }\n                    else {\n                        alert(res.data.err_msg);\n                    }\n                })\n                .catch(err => {\n                    alert('Error in Server ' + err.response.status);\n                    console.log(err.response);\n                });\n        }\n\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n        if (e.target.value == \"\") {\n            this.setState({ [e.target.name + \"_error\"]: true });\n        }\n        else {\n            this.setState({ [e.target.name + \"_error\"]: false });\n        }\n    }\n    getuserList() {\n        axios.get('/api/getUserList')\n            .then(res => {\n                this.setState({ usr_list: res.data.usr_list,comp: <DispUserList usr_list={res.data.usr_list} handleselect={this.handleUserselect} /> },()=>{\n                    console.log('Get User',this.state.usr_list);\n                })\n                \n            })\n            .catch(err => {\n                err.response? alert('Error in Server ' + err.response.status):console.log(err);\n                \n            });\n    }\n    \n    \n    render() {\n        return (\n            <Router>\n                <div className=\"Registrar\">\n                    <div className=\"Registrar-header\">\n                        <button\n                            onClick={this.props.goback}\n                            style={{ marginLeft: \"auto\" }}\n                            className=\"btn btn-primary \"\n                        >\n                            Go Back\n                        </button>\n                        <form onSubmit={this.handleSubmit}>\n                            <h3>Remove User</h3>\n                            <div className=\"form-group\">\n                                <label>Username</label>\n                                <input type=\"text\" name=\"username\" onChange={this.handleChange} className=\"form-control\" placeholder=\"EnterUsername\" />\n                                {this.state.username_error ? <div style={{ color: \"red\" }}>Username cannot be Empty</div> : \"\"}\n                            </div>\n                            <br />\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                            </div>\n                        </form>\n                        <button className=\"btn btn-secondary \" onClick={this.getuserList}>Get User List</button>\n                        {this.state.comp}\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}","/home/anurat/JISS/frontend/src/components/viewfreeslot.component.js",["288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308"],"import React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\nimport axios from 'axios';\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LogoutButton from \"./logoutbutton\"\nimport './form.css';\nimport AddCase from './createcase.component';\nimport { PropertyKeys } from \"ag-grid-community\";\nimport ViewPendingCases from \"./viewPendingCases.component\";\nimport AdjForm from './enterAdjDetails.component';\n\nclass DispSlots extends Component {\n    /**\n     * @param: props : {handleSelectSlot, free_slot:{slot1: \"1\",...}}\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected_slot: \"None\",\n            selected_slot_error: false\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n    handleChange(e) {\n        console.log(\"Handle Change\", e.target.value);\n        this.setState({ selected_slot: e.target.value }, () => {\n            if (this.state.selected_slot == \"None\") {\n                this.setState({ selected_slot_error: true }, () => console.log(\"State\", this.state));\n            }\n            else {\n                this.setState({ selected_slot_error: false }, () => console.log(\"State\", this.state));\n            }\n        });\n\n\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        var errors = {\n            selected_slot_error: false\n        }\n        //Validate Form input\n        var flag = false;\n        if (this.state.selected_slot == \"None\") {\n            this.setState({ selected_slot_error: true });\n            errors.selected_slot_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ selected_slot_error: false });\n            errors.selected_slot_error = false;\n        }\n\n        if (!flag) {\n            this.props.handleSelectSlot({ 'selected_slot': this.state.selected_slot });\n        }\n\n    }\n    render() {\n        return (\n            <div>\n                <button\n                    onClick={this.props.goback}\n                    style={{ marginLeft: \"auto\" }}\n                    className=\"btn btn-primary \"\n                >\n                    Go Back\n                </button>\n                <form onSubmit={this.handleSubmit} >\n                    <div className=\"form-group\">\n                        <label>Select Slot:</label>\n                        <label>\n                            <select className=\"form-control\" defaultValue=\"None\" name=\"usr_type\" onChange={this.handleChange}>\n                                <option value=\"None\">Select Slot</option>\n                                {this.props.free_slot.slot1 == \"1\" ? <option value=\"slot1\">Slot 1</option> : null}\n                                {this.props.free_slot.slot2 == \"1\" ? <option value=\"slot2\">Slot 2</option> : null}\n                                {this.props.free_slot.slot3 == \"1\" ? <option value=\"slot3\">Slot 3</option> : null}\n                                {this.props.free_slot.slot4 == \"1\" ? <option value=\"slot4\">Slot 4</option> : null}\n                                {this.props.free_slot.slot5 == \"1\" ? <option value=\"slot5\">Slot 5</option> : null}\n                            </select>\n                            {this.state.selected_slot_error ? <div style={{ color: \"red\" }}>Selected Slot cannot be Empty</div> : \"\"}\n                        </label>\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n/**\n * props : cin,goback\n */\nexport default class ViewFreeSlot extends Component {\n    constructor(props) {\n        super(props);\n        console.log('View Free Slot')\n        this.state = {\n            val: \"0\",\n            free_slot: null,\n            query_date: new Date(),\n            pending_case_list: [],\n            selected_slot: null,\n            query_date_error: false,\n            selected_cin: props.match ? props.match.params.cin : \"\"\n        };\n        console.log(props.location);\n        console.log(this.state);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.setPendingCases = this.setPendingCases.bind(this);\n        this.handleSelectSlot = this.handleSelectSlot.bind(this);\n        this.handleAssignHearingDate = this.handleAssignHearingDate.bind(this);\n        this.goback = this.goback.bind(this);\n    }\n    handleAssignHearingDate() {\n        console.log('Assign Hearing Date');\n\n\n        var req = {\n            \"cin\": this.state.selected_cin,\n            \"slot\": (\n                this.state.selected_slot == \"slot1\" ? \"1\"\n                    : this.state.selected_slot == \"slot2\" ? \"2\"\n                        : this.state.selected_slot == \"slot3\" ? \"3\"\n                            : this.state.selected_slot == \"slot4\" ? \"4\"\n                                : \"5\"\n            ),\n            \"date\": {\n                \"day\": this.state.query_date.getDate().toString(),\n                \"month\": (this.state.query_date.getMonth() + 1).toString(),\n                \"year\": this.state.query_date.getFullYear().toString()\n\n            }\n        }\n        axios.post('/api/assignHearingSlot', req)\n            .then(res => {\n                if (res.data.confirm == \"0\") {\n                    alert(res.data.message);\n                }\n                else {\n                    alert(\"Hearing for Case with CIN \" + this.state.selected_cin + \"sheduled for \" + this.state.query_date + \", at slot,\" + this.state.selected_slot);\n\n                }\n            })\n            .catch(err => {\n                err.response ? alert('Error in Server ' + err.response.status) : console.log(err);\n            });\n\n    }\n    goback() {\n        //REset the state\n        this.setState({ val: \"0\", selected_slot: null });\n    }\n    handleSelectSlot(props) {\n        console.log('Handle Select Slots ', props);\n        if (this.state.selected_cin == \"\") {\n            this.setState({ selected_slot: props.selected_slot }, () => { console.log(this.state); this.setState({ val: \"2\" }) });\n        }\n        else {\n            this.setState({ selected_slot: props.selected_slot }, () => { console.log(this.state); this.handleAssignHearingDate(); });\n            this.setState({ val: \"4\" });\n        }\n\n\n    }\n    setPendingCases(props) {\n        this.setState({ pending_case_list: props.pending_case_list });\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        if (!this.state.query_date) {\n            this.setState({ query_date_error: true });\n\n        }\n        else {\n            this.setState({ query_date_error: false });\n            const requestOptions = {\n                'day': this.state.query_date.getDate().toString(),\n                'month': (this.state.query_date.getMonth() + 1).toString(),\n                'year': this.state.query_date.getFullYear().toString()\n            };\n            console.log(requestOptions);\n            axios.post('/api/queryFreeSlot', requestOptions)\n                .then(res => {\n                    console.log(res.data);\n                    this.setState({ free_slot: res.data.free_slot, val: \"1\" });\n                })\n                .catch(err => {\n                    alert('Error in Server ' + err.response.status);\n                    console.log(err.response);\n                });\n        }\n    }\n\n    handleChange(date) {\n        this.setState({ query_date: date });\n        if (date == null) {\n            this.setState({ query_date_error: true });\n\n        }\n        else {\n            this.setState({ query_date_error: false });\n        }\n    }\n    render() {\n        //Entry Adj\n        if (this.state.val == \"4\") {\n            return (\n\n                <Router>\n                    <div className=\"Registrar\">\n                        <div className=\"Registrar-header\">\n                            <h1>Give Adjournment Details for CIN:{this.state.selected_cin}</h1>\n                            <AdjForm cin={this.state.selected_cin} goback={this.props.goback} />\n                        </div>\n                    </div>\n                </Router>\n            );\n        }\n        else if (this.state.val == \"3\") {\n            //Choose Case\n            return (\n                <Router>\n                    <div className=\"Registrar\">\n                        <div className=\"Registrar-header\">\n                            <AddCase getAddedCIN={(cin) => { this.setState({ selected_cin: cin }, () => this.handleAssignHearingDate()); this.setState({ val: \"4\" }); }}  goback={() => { this.setState({ val: \"1\" }) }} />\n                        </div>\n                    </div>\n                </Router>\n            );\n        }\n        else if (this.state.val == \"2\") {\n            //When free slots have been chosen\n            return (\n                <Router>\n                    <div className=\"Registrar\">\n                        <div className=\"Registrar-header\">\n                            <button\n                                onClick={() => { this.setState({ val: \"1\" }) }}\n                                style={{ marginLeft: \"auto\" }}\n                                className=\"btn btn-primary \"\n                            >\n                                Go Back\n                            </button>\n                            <button className=\"btn btn-primary \" onClick={() => { this.setState({ val: \"3\" }) }}>Create New Case</button>\n                            <h3>Select From Pending Cases</h3>\n                            <ViewPendingCases handleselect={(props) => { this.setState({ selected_cin: props.data.cin }, () => this.handleAssignHearingDate()); this.setState({ val: \"4\" }); }} />\n                        </div>\n                    </div>\n                </Router>\n            );\n        }\n        else if (this.state.val == \"1\") {\n            //Chose slot\n            return (\n                <Router>\n                    <div className=\"Registrar\">\n                        <div className=\"Registrar-header\">\n                            {this.state.free_slot != null ? <DispSlots goback={this.goback} handleSelectSlot={this.handleSelectSlot} free_slot={this.state.free_slot} /> : null}\n                        </div>\n                    </div>\n                </Router>\n            );\n        }\n        else {\n            return (\n                <Router>\n                    <div className=\"Registrar\">\n                        <div className=\"Registrar-header\">\n                            {\n                                typeof (this.props.goback) == \"string\" ?\n                                <a href={this.props.goback}>Go Back</a>\n                                : <button\n                                        onClick={this.props.goback}\n                                        style={{ marginLeft: \"auto\" }}\n                                        className=\"btn btn-primary \"\n                                    >\n                                        Go Back\n                                </button>\n                            }\n\n                            <form onSubmit={this.handleSubmit}>\n                                <h3>Query Free Slots</h3>\n                                <div className=\"form-group\">\n                                    Enter Date: <DatePicker dateFormat=\"dd-MM-y\" selected={this.state.query_date} onChange={this.handleChange} />\n                                    {this.state.query_date_error ? <div style={{ color: \"red\" }}>Query Date cannot be Empty</div> : \"\"}\n                                </div>\n                                <div className=\"form-group\">\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </Router>\n            );\n        }\n    }\n}","/home/anurat/JISS/frontend/src/components/createcase.component.js",["309","310","311","312","313","314","315","316","317","318","319","320","321"],"import React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\nimport axios from 'axios';\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LogoutButton from \"./logoutbutton\"\nimport './form.css';\n/**\n * props : hearing_slot,hearing_date,goback\n */\nexport default class AddCase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            def_name: \"\",\n            def_addr: \"\",\n            crime_type: \"\",\n            crime_date: null,\n            crime_loc: \"\",\n            arresting_off_name: \"\",\n            arrest_date: null,\n            name_pres_judge: \"\",\n            public_prosecutor_name: \"\",\n            public_prosecutor_addr: \"\",\n            starting_date: null,\n            expected_completion_date: null,\n            hearing_slot: props.hearing_slot ? props.hearing_slot : \"-1\",\n            hearing_date: props.hearing_date ? props.hearing_date : null,\n\n            def_name_error: false,\n            def_addr_error: false,\n            crime_type_error: false,\n            crime_date_error: false,\n            crime_loc_error: false,\n            arresting_off_name_error: false,\n            arrest_date_error: false,\n            name_pres_judge_error: false,\n            public_prosecutor_name_error: false,\n            public_prosecutor_addr_error: false,\n            starting_date_error: false\n\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        var errors = {\n            def_name_error: false,\n            def_addr_error: false,\n            crime_type_error: false,\n            crime_date_error: false,\n            crime_loc_error: false,\n            arresting_off_name_error: false,\n            arrest_date_error: false,\n            name_pres_judge_error: false,\n            public_prosecutor_name_error: false,\n            public_prosecutor_addr_error:false,\n            starting_date_error: false,\n\n        }\n        //Validate Form input\n        var flag = false;\n        if (this.state.def_name == \"\") {\n            this.setState({ def_name_error: true });\n            errors.def_name_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ def_name_error: false });\n            errors.def_name_error = false;\n        }\n\n        if (this.state.public_prosecutor_name == \"\") {\n            this.setState({ public_prosecutor_name_error: true });\n            errors.public_prosecutor_name_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ public_prosecutor_name_error: false });\n            errors.public_prosecutor_name_error = false;\n        }\n\n        if (this.state.public_prosecutor_addr == \"\") {\n            this.setState({ public_prosecutor_addr_error: true });\n            errors.public_prosecutor_addr_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ public_prosecutor_addr_error: false });\n            errors.public_prosecutor_addr_error = false;\n        }\n\n        if (this.state.def_addr == \"\") {\n            this.setState({ def_addr_error: true });\n            errors.def_addr_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ def_addr_error: false });\n            errors.def_addr_error = false;\n        }\n\n        if (this.state.arresting_off_name == \"\") {\n            this.setState({ arresting_off_name_error: true });\n            errors.arresting_off_name_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ arresting_off_name_error: false });\n            errors.arresting_off_name_error = false;\n        }\n\n        if (this.state.name_pres_judge == \"\") {\n            this.setState({ name_pres_judge_error: true });\n            errors.name_pres_judge_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ name_pres_judge_error: false });\n            errors.name_pres_judge_error = false;\n        }\n\n        \n\n        if (this.state.crime_type == \"\") {\n            this.setState({ crime_type_error: true });\n            errors.crime_type_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ crime_type_error: false });\n            errors.crime_type_error = false;\n        }\n\n        if (this.state.crime_loc == \"\") {\n            this.setState({ crime_loc_error: true });\n            errors.crime_loc_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ crime_loc_error: false });\n            errors.crime_loc_error = false;\n        }\n\n        if (this.state.arrest_date == null) {\n            this.setState({ arrest_date_error: true });\n            errors.arrest_date_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ arrest_date_error: false });\n            errors.arrest_date_error = false;\n        }\n\n        if (this.state.crime_date == null) {\n            this.setState({ crime_date_error: true });\n            errors.crime_date_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ crime_date_error: false });\n            errors.crime_date_error = false;\n        }\n\n        if (this.state.starting_date == null) {\n            this.setState({ starting_date_error: true });\n            errors.starting_date_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ starting_date_error: false });\n            errors.starting_date_error = false;\n        }\n\n        //Some data consistency checks\n        if(this.state.crime_date>this.state.arrest_date)\n        {\n            alert('Crime date cannot be after arrest date');\n            flag = true;\n        }\n        if(this.state.hearing_date && this.state.hearing_date<this.state.arrest_date)\n        {\n            alert('Arrest Date cannot be after hearing date');\n            flag = true;\n        }        \n        if(this.state.hearing_date && this.state.starting_date>this.state.hearing_date)\n        {\n            alert('Starting Date cannot be After hearing date');\n            flag = true;\n        }\n        \n        if (!flag) {\n            const requestOptions = {\n                'def_name': this.state.def_name,\n                'def_addr': this.state.def_addr,\n                'crime_type': this.state.crime_type,\n                'crime_date': {\n                    'day': this.state.crime_date.getDate().toString(),\n                    'month': (this.state.crime_date.getMonth()+1).toString(),\n                    'year': this.state.crime_date.getFullYear().toString()\n                },\n                'crime_loc': this.state.crime_loc,\n                'arresting_off_name': this.state.arresting_off_name,\n                'arrest_date': {\n                    'day': this.state.arrest_date.getDate().toString(),\n                    'month': (this.state.arrest_date.getMonth()+1).toString(),\n                    'year': this.state.arrest_date.getFullYear().toString()\n                },\n                'name_pres_judge': this.state.name_pres_judge,\n                'public_prosecutor_name': this.state.public_prosecutor_name,\n                'public_prosecutor_addr': this.state.public_prosecutor_addr,\n                'starting_date': {\n                    'day': this.state.starting_date.getDate().toString(),\n                    'month': (this.state.starting_date.getMonth()+1).toString(),\n                    'year': this.state.starting_date.getFullYear().toString()\n                },\n                'expected_completion_date': this.state.expected_completion_date ? {\n                    'day': this.state.expected_completion_date.getDate().toString(),\n                    'month': (this.state.expected_completion_date.getMonth()+1).toString(),\n                    'year': this.state.expected_completion_date.getFullYear().toString()\n                } : \"-1\",\n                'hearing_slot': this.state.hearing_slot ? this.state.hearing_slot : \"-1\",\n                'hearing_date': this.state.hearing_date ? {\n                    'day': this.state.hearing_date.getDate().toString(),\n                    'month': (this.state.hearing_date.getMonth()+1).toString(),\n                    'year': this.state.hearing_date.getFullYear().toString()\n                } : \"-1\"\n\n            };\n            axios.post('/api/addCase', requestOptions)\n                .then(res => {\n                    console.log(res.data);\n                    if (res.data.is_added == \"0\") {\n                        alert(res.data.message);\n                    }\n                    else {\n                        if(this.props.getAddedCIN!=null) this.props.getAddedCIN(res.data.cin) \n                        alert('Case Added Successfully');\n                        // this.props.goback();//Optional\n                    }\n                })\n                .catch(err => {\n                    err.response ? alert('Error in Server ' + err.response.status) : console.log(err);\n                });\n        }\n\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n        if (e.target.value == \"\") {\n            this.setState({ [e.target.name + \"_error\"]: true });\n        }\n        else {\n            this.setState({ [e.target.name + \"_error\"]: false });\n        }\n    }\n    render() {\n        return (\n            <Router>\n                <div className=\"Registrar\">\n                    <div className=\"Registrar-header\">\n                        <button\n                            onClick={this.props.goback}\n                            style={{ marginLeft: \"auto\" }}\n                            className=\"btn btn-primary \"\n                        >\n                            Go Back\n                    </button>\n                        <form onSubmit={this.handleSubmit}>\n                            <h3>Add Case</h3>\n\n                            <div className=\"form-group\">\n                                <label>Defenent Name</label>\n                                <input type=\"text\" name=\"def_name\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Def Name\" />\n                                {this.state.def_name_error ? <div style={{ color: \"red\" }}>Name cannot be Empty</div> : \"\"}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Defendent Address</label>\n                                <input type=\"text\" name=\"def_addr\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Def Address\" />\n                                {this.state.def_addr_error ? <div style={{ color: \"red\" }}>Address cannot be Empty</div> : \"\"}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Crime Type</label>\n                                <input type=\"text\" name=\"crime_type\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Crime Type\" />\n                                {this.state.crime_type_error ? <div style={{ color: \"red\" }}>Crime Type cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                Enter Crime Date: <DatePicker dateFormat=\"dd-MM-y\" selected={this.state.crime_date} onChange={date => {\n                                    this.setState({ crime_date: date });\n                                    (!date) ? this.setState({ crime_date_error: true }) : this.setState({ crime_date_error: false });\n                                }} />\n                                {this.state.crime_date_error ? <div style={{ color: \"red\" }}>Crime Date cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Crime Location</label>\n                                <input type=\"text\" name=\"crime_loc\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Crime Location\" />\n                                {this.state.crime_loc_error ? <div style={{ color: \"red\" }}>Crime Location cannot be Empty</div> : \"\"}\n                            </div>\n\n\n                            <div className=\"form-group\">\n                                <label>Arresting Officer Name: </label>\n                                <input type=\"text\" name=\"arresting_off_name\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Arresting Officer Name\" />\n                                {this.state.arresting_off_name_error ? <div style={{ color: \"red\" }}>Name cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                Enter Arrest Date: <DatePicker dateFormat=\"dd-MM-y\" selected={this.state.arrest_date} onChange={date => {\n                                    this.setState({ arrest_date: date });\n                                    (!date) ? this.setState({ arrest_date_error: true }) : this.setState({ arrest_date_error: false });\n                                }} />\n                                {this.state.arrest_date_error ? <div style={{ color: \"red\" }}>Arrest Date cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Presiding Judge Name: </label>\n                                <input type=\"text\" name=\"name_pres_judge\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Presiding Judge Name\" />\n                                {this.state.name_pres_judge_error ? <div style={{ color: \"red\" }}>Name cannot be Empty</div> : \"\"}\n                            </div>\n                            \n                            <div className=\"form-group\">\n                                <label>Public Prosecutor Name: </label>\n                                <input type=\"text\" name=\"public_prosecutor_name\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Public Prosecutor Name\" />\n                                {this.state.public_prosecutor_name_error ? <div style={{ color: \"red\" }}>Name cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Public Prosecutor Address: </label>\n                                <input type=\"text\" name=\"public_prosecutor_addr\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Public Prosecutor Address\" />\n                                {this.state.public_prosecutor_addr_error ? <div style={{ color: \"red\" }}>Address cannot be Empty</div> : \"\"}\n                            </div>\n\n                            \n\n                            <div className=\"form-group\">\n                                Starting Date: <DatePicker dateFormat=\"dd-MM-y\" selected={this.state.starting_date} onChange={date => {\n                                    this.setState({ starting_date: date });\n                                    (!date) ? this.setState({ starting_date_error: true }) : this.setState({ starting_date_error: false });\n                                }} />\n                                {this.state.starting_date_error ? <div style={{ color: \"red\" }}>Starting Date cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                Expected Completion Date: <DatePicker dateFormat=\"dd-MM-y\" selected={this.state.expected_completion_date} onChange={date => {\n                                    this.setState({ expected_completion_date: date });\n                                }} />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}","/home/anurat/JISS/frontend/src/components/viewPendingCases.component.js",["322","323","324","325","326","327"],"import React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\nimport axios from 'axios';\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LogoutButton from \"./logoutbutton\"\nimport './form.css';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham-dark.css';\n\n/**\n * props: handleselect,goback\n */\nexport default class ViewPendingCases extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            case_list: null\n        };\n    }\n    componentDidMount() {\n        axios.get(\"/api/getPendingCase\")\n            .then(res => {\n                if (res.data.confirm == \"0\") {\n                    alert(res.data.message);                    \n                }\n                else {\n                    this.setState({\n                        case_list: res.data.case_list.map((item) => {\n                            return (\n                                {\n                                    'cin': item.cin,\n                                    'def_name': item.def_name,\n                                    'def_addr': item.def_addr,\n                                    'crime_type': item.crime_type,\n                                    'crime_date': new Date(parseInt(item.crime_date.year), parseInt(item.crime_date.month) - 1, parseInt(item.crime_date.day)),\n                                    'crime_loc': item.crime_loc,\n                                    'arresting_off_name': item.arresting_off_name,\n                                    'arrest_date': new Date(parseInt(item.arrest_date.year), parseInt(item.arrest_date.month) - 1, parseInt(item.arrest_date.day)),\n                                    'name_pres_judge': item.name_pres_judge,\n                                    'public_prosecutor_name': item.public_prosecutor_name,\n                                    'arrest_date': new Date(parseInt(item.starting_date.year), parseInt(item.starting_date.month) - 1, parseInt(item.starting_date.day))\n                                }\n                            );\n\n                        })\n                    }, () => console.log('Get Pending :', this.state.case_list));\n                }\n\n            })\n            .catch(err => {\n                err.response ? alert('Error in Server ' + err.response.status) : console.log(err);\n            });\n    }\n    render() {\n        return (<Router>\n            <div className=\"Registrar\">\n                <div className=\"Registrar-header\">\n                    {\n                        this.props.goback ?\n                            <button\n                                onClick={this.props.goback}\n                                style={{ marginLeft: \"auto\" }}\n                                className=\"btn btn-primary \"\n                            >\n                                Go Back\n                            </button>\n                            : null\n                    }\n\n                    <h4>Pending Cases: </h4>\n                    <div className=\"ag-theme-balham-dark\" style={{ height: 400, width: 1000 }}>\n                        <AgGridReact\n                            rowData={this.state.case_list}>\n                            <AgGridColumn onCellClicked={this.props.handleselect ? this.props.handleselect : null} field=\"cin\" sortable=\"true\"></AgGridColumn>\n                            <AgGridColumn field=\"def_name\"></AgGridColumn>\n                            <AgGridColumn field=\"def_addr\"></AgGridColumn>\n                            <AgGridColumn field=\"crime_type\"></AgGridColumn>\n                            <AgGridColumn field=\"crime_date\"></AgGridColumn>\n                            <AgGridColumn field=\"crime_loc\"></AgGridColumn>\n                            <AgGridColumn field=\"arresting_off_name\"></AgGridColumn>\n                            <AgGridColumn field=\"arrest_date\"></AgGridColumn>\n                            <AgGridColumn field=\"name_pres_judge\"></AgGridColumn>\n                            <AgGridColumn field=\"public_prosecutor_name\"></AgGridColumn>\n                            <AgGridColumn field=\"arrest_date\"></AgGridColumn>\n                        </AgGridReact>\n                    </div>\n                </div>\n            </div>\n        </Router>\n        );\n\n    }\n}","/home/anurat/JISS/frontend/src/components/enterAdjDetails.component.js",["328","329","330","331","332","333","334","335","336","337","338","339","340"],"import React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\nimport axios from 'axios';\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router,withRouter } from \"react-router-dom\";\nimport LogoutButton from \"./logoutbutton\"\nimport ViewPendingCases from './viewPendingCases.component'\nimport './form.css';\n/**\n * props : cin,goback\n */\n\nclass AdjForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reason: \"\",\n            cin: props.cin ? props.cin : \"\",\n            closed: false,\n            case_summary: \"\",\n            cin_recv:props.cin?true:false,\n\n            reason_error: false,\n            cin_error: false,\n            case_summary_error: false\n\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        var errors = {\n            reason_error: false,\n            cin_error: false\n        }\n        //Validate Form input\n        var flag = false;\n        if (this.state.reason == \"\") {\n            this.setState({ reason_error: true });\n            errors.reason_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ reason_error: false });\n            errors.reason_error = false;\n        }\n\n        if (this.state.cin == \"\") {\n            this.setState({ cin_error: true });\n            errors.cin_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ cin_error: false });\n            errors.cin_error = false;\n        }\n\n        if (this.state.closed) {\n            if (this.state.case_summary == \"\") {\n                this.setState({ case_summary_error: true });\n                errors.case_summary_error = true;\n                flag = true;\n            }\n            else {\n                this.setState({ case_summary_error: false });\n                errors.case_summary_error = false;\n            }\n        }\n        else {\n            this.setState({ case_summary_error: false });\n            errors.case_summary_error = false;\n        }\n        //Data validation\n        if(this.state.reason.includes(\"|\"))\n        {\n            alert(\"Reason should not contain '|' \");\n            flag = true;\n        }\n        var numbers = /^[0-9]+$/;\n        if(!this.state.cin.match(numbers))\n        {\n            alert('CIN must be Integer')\n            flag = true;\n        }\n        if (!flag) {\n            const requestOptions = {\n                'cin': this.state.cin,\n                'reason': this.state.reason\n\n            };\n            axios.post('/api/addAdjournmentSummary', requestOptions)\n                .then(res => {\n                    console.log(res.data);\n                    if (res.data.confirm == \"0\") {\n                        alert(res.data.message);\n                        if(res.data.message==\"Please assign the next hearing of the case!\")\n                        {\n                            this.props.history.push(`/assignslot/${this.state.cin}`);\n                        }\n                    }\n                    else {\n\n                        alert('Adjournment Details Added Successfully');\n                        if (!this.state.closed) this.props.goback();\n                        if (this.state.closed) {\n                            const req = {\n                                'cin': this.state.cin,\n                                'case_summary': this.state.case_summary\n                            }\n                            axios.post('/api/closeCase', req)\n                                .then(res => {\n                                    console.log('Close Case Response', res.data);\n                                    if (res.data.confirm == \"0\") {\n                                        alert(res.data.message);\n                                    }\n                                    else {\n                                        alert('Case ' + this.state.cin + ' was closed successfully ');\n                                        this.props.goback();\n                                    }\n                                })\n                                .catch(err => {\n                                    err.response ? alert('Error in Server ' + err.response.status) : console.log(err);\n                                });\n                        }\n                    }\n                })\n                .catch(err => {\n                    err.response ? alert('Error in Server ' + err.response.status) : console.log(err);\n                });\n\n\n        }\n\n    }\n    handleChange(e) {\n        \n        if (e.target.name != 'case_summary') {\n            this.setState({ [e.target.name]: e.target.value });\n            if (e.target.value == \"\") {\n                this.setState({ [e.target.name + \"_error\"]: true },()=>console.log(this.state));\n                \n            }\n            else {\n                this.setState({ [e.target.name + \"_error\"]: false });\n                \n            }\n        }\n        else {\n            this.setState({ [e.target.name]: e.target.value });\n            if (this.state.closed) {\n                if (e.target.value == \"\") {\n                    this.setState({ case_summary_error: true });\n                    \n                }\n                else {\n                    this.setState({ case_summary_error: false });\n                    \n                }\n            }\n            else {\n                this.setState({ case_summary_error: false });\n            }\n        }\n        \n        \n    }\n    render() {\n        return (\n            <Router>\n                <div className=\"Registrar\">\n                    <div className=\"Registrar-header\">\n                        {\n                            typeof (this.props.goback) == \"string\" ?\n                                <a href={this.props.goback}>Go Back</a>\n                                : <button\n                                    onClick={this.props.goback}\n                                    style={{ marginLeft: \"auto\" }}\n                                    className=\"btn btn-primary \"\n                                >\n                                    Go Back\n                                </button>\n                        }\n                        <form onSubmit={this.handleSubmit}>\n                            <h3>Add Adjournment Details</h3>\n\n                            <div className=\"form-group\">\n                                <label>Enter Reason of Adjournment: </label>\n                                <input type=\"text\" name=\"reason\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Adjournment Reason\" />\n                                {this.state.reason_error ? <div style={{ color: \"red\" }}>Reason cannot be Empty</div> : \"\"}\n                            </div>\n\n                            {\n                                !this.state.cin_recv ?\n                                    <div className=\"form-group\">\n                                        <label>Enter Case Identificaation Number: </label>\n                                        <input type=\"text\" name=\"cin\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter CIN\" />\n                                        {this.state.cin_error ? <div style={{ color: \"red\" }}>CIN cannot be Empty</div> : \"\"}\n                                    \n                                    <h3>Select From Pending Cases</h3>\n                                    <ViewPendingCases handleselect={(props) => { this.setState({ cin: props.data.cin,cin_recv:true });  }} />\n                                    </div>\n                                    : null\n                            }\n                            <div className=\"form-group\">\n                                <label>Close Case : </label>\n                                <input type=\"checkbox\" name=\"close\" onChange={(e) => { this.setState({ closed: e.target.checked }, () => console.log('Check', this.state)) }} />\n                            </div>\n\n                            {\n                                this.state.closed ?\n                                    <div className=\"form-group\">\n                                        <label>Enter Judgement Summary: </label>\n                                        <input type=\"text\" name=\"case_summary\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Judgement Summary\" />\n                                        {this.state.case_summary_error ? <div style={{ color: \"red\" }}>Summary cannot be Empty</div> : \"\"}\n                                    </div>\n                                    : null\n                            }\n\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\nexport default withRouter(AdjForm);","/home/anurat/JISS/frontend/src/components/queryStatus.component.js",["341","342","343","344","345","346","347","348"],"import React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\nimport axios from 'axios';\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LogoutButton from \"./logoutbutton\"\nimport './form.css';\n/**\n * props : goback\n */\nexport default class QueryStatus extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cin: \"\",\n            case_status: \"\",\n\n            cin_error: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        var flag = false;\n        var errors = {\n            cin_error: false\n        }\n        //Validate Form input\n\n\n        if (this.state.cin == \"\") {\n            this.setState({ cin_error: true });\n            errors.cin_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ cin_error: false });\n            errors.cin_error = false;\n        }\n\n\n        if (!flag) {\n            const requestOptions = {\n                'cin': this.state.cin,\n\n            };\n            axios.post('/api/queryStatus', requestOptions)\n                .then(res => {\n                    console.log(res.data);\n                    if (res.data.confirm == \"0\") {\n                        alert(res.data.message);\n                        this.setState({ case_status: \"\" });\n                    }\n                    else {\n\n                        this.setState({ case_status: res.data.case_status });\n                    }\n                })\n                .catch(err => {\n                    err.response ? alert('Error in Server ' + err.response.status) : console.log(err);\n                });\n\n        }\n\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n        if (e.target.value == \"\") {\n            this.setState({ [e.target.name + \"_error\"]: true });\n        }\n        else {\n            this.setState({ [e.target.name + \"_error\"]: false });\n        }\n        this.setState({case_status:\"\"});\n    }\n    render() {\n        return (\n            <Router>\n                <div className=\"Registrar\">\n                    <div className=\"Registrar-header\">\n                        <button\n                            onClick={this.props.goback}\n                            style={{ marginLeft: \"auto\" }}\n                            className=\"btn btn-primary \"\n                        >\n                            Go Back\n                    </button>\n                        <form onSubmit={this.handleSubmit}>\n                            <h3>Query Status of Case</h3>\n                            <div className=\"form-group\">\n                                <label>Enter CIN: </label>\n                                <input type=\"text\" name=\"cin\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter CIN\" />\n                                {this.state.cin_error ? <div style={{ color: \"red\" }}>CIN cannot be Empty</div> : \"\"}\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                            </div>\n                        </form>\n                        {\n                            this.state.case_status != \"\" ?\n                                <p>Case {this.state.cin} Status : {this.state.case_status}</p>\n                                : null\n                        }\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}","/home/anurat/JISS/frontend/src/components/resolvedCases.component.js",["349","350","351","352","353"],"import React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\nimport axios from 'axios';\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LogoutButton from \"./logoutbutton\"\nimport './form.css';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham-dark.css';\n/**\n * props : goback\n */\nexport default class QueryResolved extends Component {\n    constructor(props) {\n        \n        super(props);\n        this.state = {\n\n            beg_date: null,\n            end_date: null,\n            case_list: null,\n            data_recv: false,            \n\n            beg_date_error: false,\n            end_date_error: false\n\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        var flag = false;\n        var errors = {\n            beg_date_error: false,\n            end_date_error: false\n        }\n        //Validate Form input\n\n\n        if (this.state.beg_date == null) {\n            this.setState({ beg_date_error: true });\n            errors.beg_date_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ beg_date_error: false });\n            errors.beg_date_error = false;\n        }\n\n        if (this.state.end_date == null) {\n            this.setState({ end_date_error: true });\n            errors.end_date_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ end_date_error: false });\n            errors.end_date_error = false;\n        }\n\n        //Data Consistency Check\n\n        if(this.state.beg_date>this.state.end_date)\n        {\n            alert('Start Date Cannot be After End date');\n            flag = true;\n        }\n\n        if (!flag) {\n            const requestOptions = {\n                'beg_date': {\n                    'day': this.state.beg_date.getDate().toString(),\n                    'month': (this.state.beg_date.getMonth() + 1).toString(),\n                    'year': this.state.beg_date.getFullYear().toString()\n                },\n                'end_date': {\n                    'day': this.state.end_date.getDate().toString(),\n                    'month': (this.state.end_date.getMonth() + 1).toString(),\n                    'year': this.state.end_date.getFullYear().toString()\n                }\n            };\n            axios.post('/api/queryResolved', requestOptions)\n                .then(res => {\n                    console.log(res.data);\n                    if (res.data.confirm == \"0\") {\n                        alert(res.data.message);\n                        this.setState({ data_recv: false });\n                    }\n                    else {\n                        this.setState({\n                            data_recv: true,\n                            case_list: res.data.case_list.map((item) => {\n                                return (\n                                    {\n                                        cin: item.cin,\n                                        starting_date: new Date(parseInt(item.starting_date.year), parseInt(item.starting_date.month) - 1, parseInt(item.starting_date.day)),\n                                        name_pres_judge: item.name_pres_judge,\n                                        latest_date: new Date(parseInt(item.latest_date.year), parseInt(item.latest_date.month) - 1, parseInt(item.latest_date.day)),\n                                        case_summary: item.case_summary\n                                    }\n                                );\n\n                            })\n                        })\n                    }\n                })\n                .catch(err => {\n                    err.response ? alert('Error in Server ' + err.response.status) : console.log(err);\n                });\n\n        }\n\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n        if (e.target.value == \"\") {\n            this.setState({ [e.target.name + \"_error\"]: true });\n        }\n        else {\n            this.setState({ [e.target.name + \"_error\"]: false });\n        }\n        this.setState({ data_recv: false });\n    }\n    render() {\n        return (\n            <Router>\n                <div className=\"Registrar\">\n                    <div className=\"Registrar-header\">\n                        <button\n                            onClick={this.props.goback}\n                            style={{ marginLeft: \"auto\" }}\n                            className=\"btn btn-primary \"\n                        >\n                            Go Back\n                    </button>\n                        <form onSubmit={this.handleSubmit}>\n                            <h3>Query Resolved Cases</h3>\n\n                            <div className=\"form-group\">\n                                Starting Date: <DatePicker dateFormat=\"dd-MM-y\" selected={this.state.beg_date} onChange={date => {\n                                    this.setState({ beg_date: date }); this.setState({ data_recv: false });\n                                    (!date) ? this.setState({ beg_date_error: true }) : this.setState({ beg_date_error: false });\n                                }} />\n                                {this.state.beg_date_error ? <div style={{ color: \"red\" }}>Starting Date cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                Ending Date: <DatePicker dateFormat=\"dd-MM-y\" selected={this.state.end_date} onChange={date => {\n                                    this.setState({ end_date: date }); this.setState({ data_recv: false });\n                                    (!date) ? this.setState({ end_date_error: true }) : this.setState({ end_date_error: false });\n                                }} />\n                                {this.state.end_date_error ? <div style={{ color: \"red\" }}>Ending Date cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                            </div>\n                        </form>\n                        {\n                            this.state.data_recv ?\n                                <div className=\"ag-theme-balham-dark\" style={{ height: 400, width: 1000 }}>\n\n                                    <AgGridReact\n                                        rowData={this.state.case_list}>\n                                        <AgGridColumn field=\"starting_date\" sortable=\"true\"></AgGridColumn>\n                                        <AgGridColumn field=\"cin\"></AgGridColumn>                                        \n                                        <AgGridColumn field=\"name_pres_judge\"></AgGridColumn>\n                                        <AgGridColumn field=\"latest_date\"></AgGridColumn>\n                                        <AgGridColumn field=\"case_summary\"></AgGridColumn>                                        \n                                    </AgGridReact>\n                                </div>\n                                : null\n                        }\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}","/home/anurat/JISS/frontend/src/components/viewUpcomingByDate.component.js",["354","355","356","357","358"],"import React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\nimport axios from 'axios';\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LogoutButton from \"./logoutbutton\"\nimport './form.css';\nimport { AgGridColumn, AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-balham-dark.css';\n/**\n * props : goback\n */\nexport default class QueryUpcoming extends Component {\n    constructor(props) {\n\n        super(props);\n        this.state = {\n\n            query_date: null,\n            case_list: null,\n            data_recv: false,\n\n            query_date_error: false\n\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        var flag = false;\n        var errors = {\n            query_date_error: false,\n        }\n        //Validate Form input\n\n\n        if (this.state.query_date == null) {\n            this.setState({ query_date_error: true });\n            errors.query_date_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ query_date_error: false });\n            errors.query_date_error = false;\n        }\n\n        if (!flag) {\n            const requestOptions = {\n                'query_date': {\n                    'day': this.state.query_date.getDate().toString(),\n                    'month': (this.state.query_date.getMonth() + 1).toString(),\n                    'year': this.state.query_date.getFullYear().toString()\n                }\n\n            };\n            axios.post('/api/queryUpcomingByDate', requestOptions)\n                .then(res => {\n                    console.log(res.data);\n                    if (res.data.confirm == \"0\") {\n                        alert(res.data.message);\n                        this.setState({ data_recv: false });\n                    }\n                    else {\n                        this.setState({\n                            data_recv: true,\n                            case_list: res.data.case_list.map((item) => {\n                                return (\n                                    {\n                                        cin: item.cin,\n                                        slot: item.slot,\n                                        name_pres_judge: item.name_pres_judge,\n                                        crime_type :item.crime_type\n                                    }\n                                );\n                            })\n                        })\n                    }\n                })\n                .catch(err => {\n                    err.response ? alert('Error in Server ' + err.response.status) : console.log(err);\n                });\n\n        }\n\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n        if (e.target.value == \"\") {\n            this.setState({ [e.target.name + \"_error\"]: true });\n        }\n        else {\n            this.setState({ [e.target.name + \"_error\"]: false });\n        }\n        this.setState({ data_recv: false });\n    }\n    render() {\n        return (\n            <Router>\n                <div className=\"Registrar\">\n                    <div className=\"Registrar-header\">\n                        <button\n                            onClick={this.props.goback}\n                            style={{ marginLeft: \"auto\" }}\n                            className=\"btn btn-primary \"\n                        >\n                            Go Back\n                    </button>\n                        <form onSubmit={this.handleSubmit}>\n                            <h3>Query Upcoming Cases on a Date</h3>\n\n                            <div className=\"form-group\">\n                                Enter Date: <DatePicker dateFormat=\"dd-MM-y\" selected={this.state.query_date} onChange={date => {\n                                    this.setState({ query_date: date }); this.setState({ data_recv: false });\n                                    (!date) ? this.setState({ query_date_error: true }) : this.setState({ query_date_error: false });\n                                }} />\n                                {this.state.query_date_error ? <div style={{ color: \"red\" }}>Query Date cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                            </div>\n                        </form>\n                        {\n                            this.state.data_recv ?\n                                <div className=\"ag-theme-balham-dark\" style={{ height: 400, width: 1000 }}>\n\n                                    <AgGridReact\n                                        rowData={this.state.case_list}>\n                                        <AgGridColumn field=\"slot\" sortable=\"true\"></AgGridColumn>\n                                        <AgGridColumn field=\"cin\"></AgGridColumn>\n                                        <AgGridColumn field=\"name_pres_judge\"></AgGridColumn>\n                                        <AgGridColumn field=\"crime_type\"></AgGridColumn>\n                                    </AgGridReact>\n                                </div>\n                                : null\n                        }\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}","/home/anurat/JISS/frontend/src/components/closecase.component.js",["359","360","361","362","363","364","365"],"import React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\nimport axios from 'axios';\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LogoutButton from \"./logoutbutton\"\nimport './form.css';\n/**\n * props : goback\n */\nexport default class CloseCase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cin: \"\",\n            \n\n            cin_error: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        var flag = false;\n        var errors = {\n            cin_error: false\n        }\n        //Validate Form input\n\n\n        if (this.state.cin == \"\") {\n            this.setState({ cin_error: true });\n            errors.cin_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ cin_error: false });\n            errors.cin_error = false;\n        }\n        var numbers = /^[0-9]+$/;\n        console.log('During Submit',this.state.cin.match(numbers));\n        if(!this.state.cin.match(numbers))\n        {\n            alert('CIN must be Integer')\n            flag = true;\n        }\n        \n\n\n        if (!flag) {\n\n            const req = {\n                'cin': this.state.cin,\n                'case_summary': this.state.case_summary\n            }\n            axios.post('/api/closeCase', req)\n                .then(res => {\n                    console.log('Close Case Response', res.data);\n                    if (res.data.confirm == \"0\") {\n                        alert(res.data.message);\n                    }\n                    else {\n                        alert('Case ' + this.state.cin + ' was closed successfully ');\n                        this.props.goback();\n                    }\n                })\n                .catch(err => {\n                    err.response ? alert('Error in Server ' + err.response.status) : console.log(err);\n                });\n\n        }\n\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n        if (e.target.value == \"\") {\n            this.setState({ [e.target.name + \"_error\"]: true });\n        }\n        else {\n            this.setState({ [e.target.name + \"_error\"]: false });\n        }\n        this.setState({ case_status: \"\" });\n    }\n    render() {\n        return (\n            <Router>\n                <div className=\"Registrar\">\n                    <div className=\"Registrar-header\">\n                        <button\n                            onClick={this.props.goback}\n                            style={{ marginLeft: \"auto\" }}\n                            className=\"btn btn-primary \"\n                        >\n                            Go Back\n                    </button>\n                        <form onSubmit={this.handleSubmit}>\n                            <h3>Query Status of Case</h3>\n                            <div className=\"form-group\">\n                                <label>Enter CIN: </label>\n                                <input type=\"text\" name=\"cin\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter CIN\" />\n                                {this.state.cin_error ? <div style={{ color: \"red\" }}>CIN cannot be Empty</div> : \"\"}\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                            </div>\n                        </form>\n\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}",{"ruleId":"366","severity":1,"message":"367","line":15,"column":3,"nodeType":"368","messageId":"369","endLine":15,"endColumn":7},{"ruleId":"366","severity":1,"message":"370","line":18,"column":8,"nodeType":"368","messageId":"369","endLine":18,"endColumn":22},{"ruleId":"366","severity":1,"message":"371","line":2,"column":17,"nodeType":"368","messageId":"369","endLine":2,"endColumn":26},{"ruleId":"366","severity":1,"message":"372","line":3,"column":10,"nodeType":"368","messageId":"369","endLine":3,"endColumn":16},{"ruleId":"366","severity":1,"message":"373","line":5,"column":8,"nodeType":"368","messageId":"369","endLine":5,"endColumn":12},{"ruleId":"366","severity":1,"message":"374","line":9,"column":3,"nodeType":"368","messageId":"369","endLine":9,"endColumn":9},{"ruleId":"366","severity":1,"message":"375","line":10,"column":3,"nodeType":"368","messageId":"369","endLine":10,"endColumn":8},{"ruleId":"366","severity":1,"message":"367","line":11,"column":3,"nodeType":"368","messageId":"369","endLine":11,"endColumn":7},{"ruleId":"366","severity":1,"message":"376","line":12,"column":3,"nodeType":"368","messageId":"369","endLine":12,"endColumn":11},{"ruleId":"366","severity":1,"message":"371","line":1,"column":10,"nodeType":"368","messageId":"369","endLine":1,"endColumn":19},{"ruleId":"366","severity":1,"message":"377","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":16},{"ruleId":"366","severity":1,"message":"378","line":3,"column":8,"nodeType":"368","messageId":"369","endLine":3,"endColumn":18},{"ruleId":"366","severity":1,"message":"377","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":16},{"ruleId":"366","severity":1,"message":"377","line":3,"column":8,"nodeType":"368","messageId":"369","endLine":3,"endColumn":16},{"ruleId":"366","severity":1,"message":"374","line":10,"column":3,"nodeType":"368","messageId":"369","endLine":10,"endColumn":9},{"ruleId":"366","severity":1,"message":"375","line":11,"column":3,"nodeType":"368","messageId":"369","endLine":11,"endColumn":8},{"ruleId":"366","severity":1,"message":"367","line":12,"column":3,"nodeType":"368","messageId":"369","endLine":12,"endColumn":7},{"ruleId":"366","severity":1,"message":"376","line":13,"column":3,"nodeType":"368","messageId":"369","endLine":13,"endColumn":11},{"ruleId":"366","severity":1,"message":"370","line":15,"column":8,"nodeType":"368","messageId":"369","endLine":15,"endColumn":22},{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","replacedBy":"382"},{"ruleId":"366","severity":1,"message":"372","line":3,"column":10,"nodeType":"368","messageId":"369","endLine":3,"endColumn":16},{"ruleId":"366","severity":1,"message":"373","line":5,"column":8,"nodeType":"368","messageId":"369","endLine":5,"endColumn":12},{"ruleId":"366","severity":1,"message":"367","line":20,"column":3,"nodeType":"368","messageId":"369","endLine":20,"endColumn":7},{"ruleId":"383","severity":1,"message":"384","line":40,"column":28,"nodeType":"385","messageId":"386","endLine":40,"endColumn":30},{"ruleId":"383","severity":1,"message":"384","line":45,"column":30,"nodeType":"385","messageId":"386","endLine":45,"endColumn":32},{"ruleId":"383","severity":1,"message":"384","line":45,"column":62,"nodeType":"385","messageId":"386","endLine":45,"endColumn":64},{"ruleId":"383","severity":1,"message":"384","line":54,"column":36,"nodeType":"385","messageId":"386","endLine":54,"endColumn":38},{"ruleId":"383","severity":1,"message":"384","line":72,"column":35,"nodeType":"385","messageId":"386","endLine":72,"endColumn":37},{"ruleId":"383","severity":1,"message":"384","line":80,"column":39,"nodeType":"385","messageId":"386","endLine":80,"endColumn":41},{"ruleId":"383","severity":1,"message":"384","line":80,"column":72,"nodeType":"385","messageId":"386","endLine":80,"endColumn":74},{"ruleId":"383","severity":1,"message":"384","line":100,"column":41,"nodeType":"385","messageId":"386","endLine":100,"endColumn":43},{"ruleId":"383","severity":1,"message":"384","line":101,"column":42,"nodeType":"385","messageId":"386","endLine":101,"endColumn":44},{"ruleId":"383","severity":1,"message":"384","line":104,"column":44,"nodeType":"385","messageId":"386","endLine":104,"endColumn":46},{"ruleId":"383","severity":1,"message":"384","line":106,"column":48,"nodeType":"385","messageId":"386","endLine":106,"endColumn":50},{"ruleId":"383","severity":1,"message":"384","line":115,"column":40,"nodeType":"385","messageId":"386","endLine":115,"endColumn":42},{"ruleId":"383","severity":1,"message":"384","line":122,"column":40,"nodeType":"385","messageId":"386","endLine":122,"endColumn":42},{"ruleId":"383","severity":1,"message":"384","line":129,"column":40,"nodeType":"385","messageId":"386","endLine":129,"endColumn":42},{"ruleId":"383","severity":1,"message":"384","line":138,"column":43,"nodeType":"385","messageId":"386","endLine":138,"endColumn":45},{"ruleId":"383","severity":1,"message":"384","line":139,"column":44,"nodeType":"385","messageId":"386","endLine":139,"endColumn":46},{"ruleId":"366","severity":1,"message":"371","line":1,"column":10,"nodeType":"368","messageId":"369","endLine":1,"endColumn":19},{"ruleId":"387","severity":1,"message":"388","line":5,"column":5,"nodeType":"389","messageId":"390","endLine":8,"endColumn":6},{"ruleId":"366","severity":1,"message":"377","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":16},{"ruleId":"366","severity":1,"message":"378","line":3,"column":8,"nodeType":"368","messageId":"369","endLine":3,"endColumn":18},{"ruleId":"366","severity":1,"message":"391","line":12,"column":5,"nodeType":"368","messageId":"369","endLine":12,"endColumn":15},{"ruleId":"366","severity":1,"message":"374","line":14,"column":5,"nodeType":"368","messageId":"369","endLine":14,"endColumn":11},{"ruleId":"366","severity":1,"message":"375","line":15,"column":5,"nodeType":"368","messageId":"369","endLine":15,"endColumn":10},{"ruleId":"366","severity":1,"message":"367","line":16,"column":5,"nodeType":"368","messageId":"369","endLine":16,"endColumn":9},{"ruleId":"366","severity":1,"message":"376","line":17,"column":5,"nodeType":"368","messageId":"369","endLine":17,"endColumn":13},{"ruleId":"383","severity":1,"message":"384","line":30,"column":32,"nodeType":"385","messageId":"386","endLine":30,"endColumn":34},{"ruleId":"383","severity":1,"message":"384","line":41,"column":27,"nodeType":"385","messageId":"386","endLine":41,"endColumn":29},{"ruleId":"383","severity":1,"message":"384","line":101,"column":32,"nodeType":"385","messageId":"386","endLine":101,"endColumn":34},{"ruleId":"383","severity":1,"message":"384","line":111,"column":32,"nodeType":"385","messageId":"386","endLine":111,"endColumn":34},{"ruleId":"366","severity":1,"message":"377","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":16},{"ruleId":"366","severity":1,"message":"378","line":3,"column":8,"nodeType":"368","messageId":"369","endLine":3,"endColumn":18},{"ruleId":"366","severity":1,"message":"391","line":12,"column":5,"nodeType":"368","messageId":"369","endLine":12,"endColumn":15},{"ruleId":"366","severity":1,"message":"374","line":14,"column":5,"nodeType":"368","messageId":"369","endLine":14,"endColumn":11},{"ruleId":"366","severity":1,"message":"375","line":15,"column":5,"nodeType":"368","messageId":"369","endLine":15,"endColumn":10},{"ruleId":"366","severity":1,"message":"367","line":16,"column":5,"nodeType":"368","messageId":"369","endLine":16,"endColumn":9},{"ruleId":"366","severity":1,"message":"376","line":17,"column":5,"nodeType":"368","messageId":"369","endLine":17,"endColumn":13},{"ruleId":"383","severity":1,"message":"384","line":29,"column":32,"nodeType":"385","messageId":"386","endLine":29,"endColumn":34},{"ruleId":"383","severity":1,"message":"384","line":40,"column":27,"nodeType":"385","messageId":"386","endLine":40,"endColumn":29},{"ruleId":"383","severity":1,"message":"384","line":101,"column":32,"nodeType":"385","messageId":"386","endLine":101,"endColumn":34},{"ruleId":"383","severity":1,"message":"384","line":111,"column":32,"nodeType":"385","messageId":"386","endLine":111,"endColumn":34},{"ruleId":"366","severity":1,"message":"392","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":18},{"ruleId":"366","severity":1,"message":"377","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":16},{"ruleId":"366","severity":1,"message":"378","line":6,"column":8,"nodeType":"368","messageId":"369","endLine":6,"endColumn":18},{"ruleId":"366","severity":1,"message":"376","line":9,"column":34,"nodeType":"368","messageId":"369","endLine":9,"endColumn":42},{"ruleId":"393","severity":1,"message":"394","line":24,"column":79,"nodeType":"395","messageId":"386","endLine":24,"endColumn":83},{"ruleId":"383","severity":1,"message":"396","line":37,"column":41,"nodeType":"385","messageId":"386","endLine":37,"endColumn":43},{"ruleId":"383","severity":1,"message":"384","line":38,"column":45,"nodeType":"385","messageId":"386","endLine":38,"endColumn":47},{"ruleId":"383","severity":1,"message":"384","line":41,"column":50,"nodeType":"385","messageId":"386","endLine":41,"endColumn":52},{"ruleId":"383","severity":1,"message":"384","line":44,"column":50,"nodeType":"385","messageId":"386","endLine":44,"endColumn":52},{"ruleId":"383","severity":1,"message":"384","line":47,"column":50,"nodeType":"385","messageId":"386","endLine":47,"endColumn":52},{"ruleId":"383","severity":1,"message":"384","line":52,"column":50,"nodeType":"385","messageId":"386","endLine":52,"endColumn":52},{"ruleId":"383","severity":1,"message":"384","line":62,"column":50,"nodeType":"385","messageId":"386","endLine":62,"endColumn":52},{"ruleId":"383","severity":1,"message":"384","line":65,"column":50,"nodeType":"385","messageId":"386","endLine":65,"endColumn":52},{"ruleId":"383","severity":1,"message":"384","line":68,"column":50,"nodeType":"385","messageId":"386","endLine":68,"endColumn":52},{"ruleId":"383","severity":1,"message":"384","line":71,"column":49,"nodeType":"385","messageId":"386","endLine":71,"endColumn":51},{"ruleId":"383","severity":1,"message":"384","line":74,"column":49,"nodeType":"385","messageId":"386","endLine":74,"endColumn":51},{"ruleId":"366","severity":1,"message":"397","line":7,"column":22,"nodeType":"368","messageId":"369","endLine":7,"endColumn":28},{"ruleId":"366","severity":1,"message":"374","line":8,"column":5,"nodeType":"368","messageId":"369","endLine":8,"endColumn":11},{"ruleId":"366","severity":1,"message":"375","line":9,"column":5,"nodeType":"368","messageId":"369","endLine":9,"endColumn":10},{"ruleId":"366","severity":1,"message":"367","line":10,"column":5,"nodeType":"368","messageId":"369","endLine":10,"endColumn":9},{"ruleId":"383","severity":1,"message":"384","line":31,"column":32,"nodeType":"385","messageId":"386","endLine":31,"endColumn":34},{"ruleId":"383","severity":1,"message":"384","line":44,"column":33,"nodeType":"385","messageId":"386","endLine":44,"endColumn":35},{"ruleId":"383","severity":1,"message":"384","line":54,"column":33,"nodeType":"385","messageId":"386","endLine":54,"endColumn":35},{"ruleId":"383","severity":1,"message":"384","line":73,"column":45,"nodeType":"385","messageId":"386","endLine":73,"endColumn":47},{"ruleId":"366","severity":1,"message":"398","line":8,"column":8,"nodeType":"368","messageId":"369","endLine":8,"endColumn":13},{"ruleId":"366","severity":1,"message":"399","line":4,"column":10,"nodeType":"368","messageId":"369","endLine":4,"endColumn":18},{"ruleId":"383","severity":1,"message":"384","line":7,"column":30,"nodeType":"385","messageId":"386","endLine":7,"endColumn":32},{"ruleId":"366","severity":1,"message":"392","line":1,"column":8,"nodeType":"368","messageId":"369","endLine":1,"endColumn":18},{"ruleId":"366","severity":1,"message":"400","line":2,"column":28,"nodeType":"368","messageId":"369","endLine":2,"endColumn":35},{"ruleId":"366","severity":1,"message":"401","line":2,"column":37,"nodeType":"368","messageId":"369","endLine":2,"endColumn":45},{"ruleId":"366","severity":1,"message":"402","line":2,"column":47,"nodeType":"368","messageId":"369","endLine":2,"endColumn":56},{"ruleId":"366","severity":1,"message":"392","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":18},{"ruleId":"366","severity":1,"message":"377","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":16},{"ruleId":"366","severity":1,"message":"378","line":6,"column":8,"nodeType":"368","messageId":"369","endLine":6,"endColumn":18},{"ruleId":"366","severity":1,"message":"403","line":10,"column":8,"nodeType":"368","messageId":"369","endLine":10,"endColumn":20},{"ruleId":"383","severity":1,"message":"384","line":40,"column":33,"nodeType":"385","messageId":"386","endLine":40,"endColumn":35},{"ruleId":"383","severity":1,"message":"384","line":56,"column":33,"nodeType":"385","messageId":"386","endLine":56,"endColumn":35},{"ruleId":"383","severity":1,"message":"384","line":64,"column":33,"nodeType":"385","messageId":"386","endLine":64,"endColumn":35},{"ruleId":"383","severity":1,"message":"384","line":73,"column":33,"nodeType":"385","messageId":"386","endLine":73,"endColumn":35},{"ruleId":"383","severity":1,"message":"384","line":92,"column":45,"nodeType":"385","messageId":"386","endLine":92,"endColumn":47},{"ruleId":"383","severity":1,"message":"384","line":109,"column":31,"nodeType":"385","messageId":"386","endLine":109,"endColumn":33},{"ruleId":"383","severity":1,"message":"384","line":110,"column":36,"nodeType":"385","messageId":"386","endLine":110,"endColumn":38},{"ruleId":"383","severity":1,"message":"384","line":117,"column":36,"nodeType":"385","messageId":"386","endLine":117,"endColumn":38},{"ruleId":"383","severity":1,"message":"384","line":126,"column":36,"nodeType":"385","messageId":"386","endLine":126,"endColumn":38},{"ruleId":"366","severity":1,"message":"392","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":18},{"ruleId":"366","severity":1,"message":"377","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":16},{"ruleId":"366","severity":1,"message":"378","line":6,"column":8,"nodeType":"368","messageId":"369","endLine":6,"endColumn":18},{"ruleId":"366","severity":1,"message":"403","line":13,"column":8,"nodeType":"368","messageId":"369","endLine":13,"endColumn":20},{"ruleId":"383","severity":1,"message":"384","line":61,"column":44,"nodeType":"385","messageId":"386","endLine":61,"endColumn":46},{"ruleId":"383","severity":1,"message":"384","line":79,"column":33,"nodeType":"385","messageId":"386","endLine":79,"endColumn":35},{"ruleId":"383","severity":1,"message":"384","line":88,"column":48,"nodeType":"385","messageId":"386","endLine":88,"endColumn":50},{"ruleId":"383","severity":1,"message":"384","line":108,"column":28,"nodeType":"385","messageId":"386","endLine":108,"endColumn":30},{"ruleId":"366","severity":1,"message":"392","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":18},{"ruleId":"366","severity":1,"message":"377","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":16},{"ruleId":"366","severity":1,"message":"403","line":10,"column":8,"nodeType":"368","messageId":"369","endLine":10,"endColumn":20},{"ruleId":"366","severity":1,"message":"404","line":13,"column":10,"nodeType":"368","messageId":"369","endLine":13,"endColumn":22},{"ruleId":"383","severity":1,"message":"384","line":35,"column":42,"nodeType":"385","messageId":"386","endLine":35,"endColumn":44},{"ruleId":"383","severity":1,"message":"384","line":52,"column":38,"nodeType":"385","messageId":"386","endLine":52,"endColumn":40},{"ruleId":"383","severity":1,"message":"384","line":83,"column":61,"nodeType":"385","messageId":"386","endLine":83,"endColumn":63},{"ruleId":"383","severity":1,"message":"384","line":84,"column":61,"nodeType":"385","messageId":"386","endLine":84,"endColumn":63},{"ruleId":"383","severity":1,"message":"384","line":85,"column":61,"nodeType":"385","messageId":"386","endLine":85,"endColumn":63},{"ruleId":"383","severity":1,"message":"384","line":86,"column":61,"nodeType":"385","messageId":"386","endLine":86,"endColumn":63},{"ruleId":"383","severity":1,"message":"384","line":87,"column":61,"nodeType":"385","messageId":"386","endLine":87,"endColumn":63},{"ruleId":"383","severity":1,"message":"384","line":132,"column":42,"nodeType":"385","messageId":"386","endLine":132,"endColumn":44},{"ruleId":"383","severity":1,"message":"384","line":133,"column":48,"nodeType":"385","messageId":"386","endLine":133,"endColumn":50},{"ruleId":"383","severity":1,"message":"384","line":134,"column":52,"nodeType":"385","messageId":"386","endLine":134,"endColumn":54},{"ruleId":"383","severity":1,"message":"384","line":135,"column":56,"nodeType":"385","messageId":"386","endLine":135,"endColumn":58},{"ruleId":"383","severity":1,"message":"384","line":147,"column":38,"nodeType":"385","messageId":"386","endLine":147,"endColumn":40},{"ruleId":"383","severity":1,"message":"384","line":166,"column":37,"nodeType":"385","messageId":"386","endLine":166,"endColumn":39},{"ruleId":"383","severity":1,"message":"384","line":217,"column":28,"nodeType":"385","messageId":"386","endLine":217,"endColumn":30},{"ruleId":"383","severity":1,"message":"384","line":230,"column":33,"nodeType":"385","messageId":"386","endLine":230,"endColumn":35},{"ruleId":"383","severity":1,"message":"384","line":242,"column":33,"nodeType":"385","messageId":"386","endLine":242,"endColumn":35},{"ruleId":"383","severity":1,"message":"384","line":263,"column":33,"nodeType":"385","messageId":"386","endLine":263,"endColumn":35},{"ruleId":"366","severity":1,"message":"392","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":18},{"ruleId":"366","severity":1,"message":"377","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":16},{"ruleId":"366","severity":1,"message":"403","line":10,"column":8,"nodeType":"368","messageId":"369","endLine":10,"endColumn":20},{"ruleId":"383","severity":1,"message":"384","line":68,"column":33,"nodeType":"385","messageId":"386","endLine":68,"endColumn":35},{"ruleId":"383","severity":1,"message":"384","line":78,"column":47,"nodeType":"385","messageId":"386","endLine":78,"endColumn":49},{"ruleId":"383","severity":1,"message":"384","line":88,"column":47,"nodeType":"385","messageId":"386","endLine":88,"endColumn":49},{"ruleId":"383","severity":1,"message":"384","line":98,"column":33,"nodeType":"385","messageId":"386","endLine":98,"endColumn":35},{"ruleId":"383","severity":1,"message":"384","line":108,"column":43,"nodeType":"385","messageId":"386","endLine":108,"endColumn":45},{"ruleId":"383","severity":1,"message":"384","line":118,"column":40,"nodeType":"385","messageId":"386","endLine":118,"endColumn":42},{"ruleId":"383","severity":1,"message":"384","line":130,"column":35,"nodeType":"385","messageId":"386","endLine":130,"endColumn":37},{"ruleId":"383","severity":1,"message":"384","line":140,"column":34,"nodeType":"385","messageId":"386","endLine":140,"endColumn":36},{"ruleId":"383","severity":1,"message":"384","line":238,"column":43,"nodeType":"385","messageId":"386","endLine":238,"endColumn":45},{"ruleId":"383","severity":1,"message":"384","line":255,"column":28,"nodeType":"385","messageId":"386","endLine":255,"endColumn":30},{"ruleId":"366","severity":1,"message":"392","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":18},{"ruleId":"366","severity":1,"message":"377","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":16},{"ruleId":"366","severity":1,"message":"378","line":6,"column":8,"nodeType":"368","messageId":"369","endLine":6,"endColumn":18},{"ruleId":"366","severity":1,"message":"403","line":10,"column":8,"nodeType":"368","messageId":"369","endLine":10,"endColumn":20},{"ruleId":"383","severity":1,"message":"384","line":30,"column":38,"nodeType":"385","messageId":"386","endLine":30,"endColumn":40},{"ruleId":"393","severity":1,"message":"405","line":48,"column":37,"nodeType":"395","messageId":"386","endLine":48,"endColumn":50},{"ruleId":"366","severity":1,"message":"392","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":18},{"ruleId":"366","severity":1,"message":"377","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":16},{"ruleId":"366","severity":1,"message":"378","line":6,"column":8,"nodeType":"368","messageId":"369","endLine":6,"endColumn":18},{"ruleId":"366","severity":1,"message":"403","line":10,"column":8,"nodeType":"368","messageId":"369","endLine":10,"endColumn":20},{"ruleId":"383","severity":1,"message":"384","line":43,"column":31,"nodeType":"385","messageId":"386","endLine":43,"endColumn":33},{"ruleId":"383","severity":1,"message":"384","line":53,"column":28,"nodeType":"385","messageId":"386","endLine":53,"endColumn":30},{"ruleId":"383","severity":1,"message":"384","line":64,"column":41,"nodeType":"385","messageId":"386","endLine":64,"endColumn":43},{"ruleId":"383","severity":1,"message":"384","line":99,"column":42,"nodeType":"385","messageId":"386","endLine":99,"endColumn":44},{"ruleId":"383","severity":1,"message":"384","line":101,"column":44,"nodeType":"385","messageId":"386","endLine":101,"endColumn":46},{"ruleId":"383","severity":1,"message":"384","line":118,"column":58,"nodeType":"385","messageId":"386","endLine":118,"endColumn":60},{"ruleId":"383","severity":1,"message":"396","line":142,"column":27,"nodeType":"385","messageId":"386","endLine":142,"endColumn":29},{"ruleId":"383","severity":1,"message":"384","line":144,"column":32,"nodeType":"385","messageId":"386","endLine":144,"endColumn":34},{"ruleId":"383","severity":1,"message":"384","line":156,"column":36,"nodeType":"385","messageId":"386","endLine":156,"endColumn":38},{"ruleId":"366","severity":1,"message":"392","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":18},{"ruleId":"366","severity":1,"message":"377","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":16},{"ruleId":"366","severity":1,"message":"378","line":6,"column":8,"nodeType":"368","messageId":"369","endLine":6,"endColumn":18},{"ruleId":"366","severity":1,"message":"403","line":10,"column":8,"nodeType":"368","messageId":"369","endLine":10,"endColumn":20},{"ruleId":"383","severity":1,"message":"384","line":36,"column":28,"nodeType":"385","messageId":"386","endLine":36,"endColumn":30},{"ruleId":"383","severity":1,"message":"384","line":55,"column":42,"nodeType":"385","messageId":"386","endLine":55,"endColumn":44},{"ruleId":"383","severity":1,"message":"384","line":73,"column":28,"nodeType":"385","messageId":"386","endLine":73,"endColumn":30},{"ruleId":"383","severity":1,"message":"396","line":105,"column":52,"nodeType":"385","messageId":"386","endLine":105,"endColumn":54},{"ruleId":"366","severity":1,"message":"392","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":18},{"ruleId":"366","severity":1,"message":"377","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":16},{"ruleId":"366","severity":1,"message":"403","line":10,"column":8,"nodeType":"368","messageId":"369","endLine":10,"endColumn":20},{"ruleId":"383","severity":1,"message":"384","line":91,"column":42,"nodeType":"385","messageId":"386","endLine":91,"endColumn":44},{"ruleId":"383","severity":1,"message":"384","line":122,"column":28,"nodeType":"385","messageId":"386","endLine":122,"endColumn":30},{"ruleId":"366","severity":1,"message":"392","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":18},{"ruleId":"366","severity":1,"message":"377","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":16},{"ruleId":"366","severity":1,"message":"403","line":10,"column":8,"nodeType":"368","messageId":"369","endLine":10,"endColumn":20},{"ruleId":"383","severity":1,"message":"384","line":66,"column":42,"nodeType":"385","messageId":"386","endLine":66,"endColumn":44},{"ruleId":"383","severity":1,"message":"384","line":95,"column":28,"nodeType":"385","messageId":"386","endLine":95,"endColumn":30},{"ruleId":"366","severity":1,"message":"392","line":2,"column":8,"nodeType":"368","messageId":"369","endLine":2,"endColumn":18},{"ruleId":"366","severity":1,"message":"377","line":4,"column":8,"nodeType":"368","messageId":"369","endLine":4,"endColumn":16},{"ruleId":"366","severity":1,"message":"378","line":6,"column":8,"nodeType":"368","messageId":"369","endLine":6,"endColumn":18},{"ruleId":"366","severity":1,"message":"403","line":10,"column":8,"nodeType":"368","messageId":"369","endLine":10,"endColumn":20},{"ruleId":"383","severity":1,"message":"384","line":36,"column":28,"nodeType":"385","messageId":"386","endLine":36,"endColumn":30},{"ruleId":"383","severity":1,"message":"384","line":64,"column":42,"nodeType":"385","messageId":"386","endLine":64,"endColumn":44},{"ruleId":"383","severity":1,"message":"384","line":81,"column":28,"nodeType":"385","messageId":"386","endLine":81,"endColumn":30},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ProtectedRoute' is defined but never used.","'Component' is defined but never used.","'render' is defined but never used.","'Auth' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'Dropdown' is defined but never used.","'DatePicker' is defined but never used.","no-native-reassign",["406"],"no-negated-in-lhs",["407"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'useHistory' is defined but never used.","'GridLayout' is defined but never used.","no-dupe-keys","Duplicate key 'comp'.","ObjectExpression","Expected '!==' and instead saw '!='.","'Router' is defined but never used.","'Table' is defined but never used.","'useTable' is defined but never used.","'useMemo' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'LogoutButton' is defined but never used.","'PropertyKeys' is defined but never used.","Duplicate key 'arrest_date'.","no-global-assign","no-unsafe-negation"]