{"ast":null,"code":"var _jsxFileName = \"/home/anurat/JISS/frontend/src/components/createcase.component.js\";\nimport React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\nimport axios from 'axios';\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LogoutButton from \"./logoutbutton\";\nimport './form.css';\n/**\n * props : hearing_slot,hearing_date,goback\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AddCase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      def_name: \"\",\n      def_addr: \"\",\n      crime_type: \"\",\n      crime_date: null,\n      crime_loc: \"\",\n      arresting_off_name: \"\",\n      arrest_date: null,\n      name_pres_judge: \"\",\n      public_prosecutor_name: \"\",\n      public_prosecutor_addr: \"\",\n      starting_date: null,\n      expected_completion_date: null,\n      hearing_slot: props.hearing_slot ? props.hearing_slot : \"-1\",\n      hearing_date: props.hearing_date ? props.hearing_date : null,\n      def_name_error: false,\n      def_addr_error: false,\n      crime_type_error: false,\n      crime_date_error: false,\n      crime_loc_error: false,\n      arresting_off_name_error: false,\n      arrest_date_error: false,\n      name_pres_judge_error: false,\n      public_prosecutor_name_error: false,\n      public_prosecutor_addr_error: false,\n      starting_date_error: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    var errors = {\n      def_name_error: false,\n      def_addr_error: false,\n      crime_type_error: false,\n      crime_date_error: false,\n      crime_loc_error: false,\n      arresting_off_name_error: false,\n      arrest_date_error: false,\n      name_pres_judge_error: false,\n      public_prosecutor_name_error: false,\n      public_prosecutor_addr_error: false,\n      starting_date_error: false\n    }; //Validate Form input\n\n    var flag = false;\n\n    if (this.state.def_name == \"\") {\n      this.setState({\n        def_name_error: true\n      });\n      errors.def_name_error = true;\n      flag = true;\n    } else {\n      this.setState({\n        def_name_error: false\n      });\n      errors.def_name_error = false;\n    }\n\n    if (this.state.public_prosecutor_name == \"\") {\n      this.setState({\n        public_prosecutor_name_error: true\n      });\n      errors.public_prosecutor_name_error = true;\n      flag = true;\n    } else {\n      this.setState({\n        public_prosecutor_name_error: false\n      });\n      errors.public_prosecutor_name_error = false;\n    }\n\n    if (this.state.public_prosecutor_addr == \"\") {\n      this.setState({\n        public_prosecutor_addr_error: true\n      });\n      errors.public_prosecutor_addr_error = true;\n      flag = true;\n    } else {\n      this.setState({\n        public_prosecutor_addr_error: false\n      });\n      errors.public_prosecutor_addr_error = false;\n    }\n\n    if (this.state.def_addr == \"\") {\n      this.setState({\n        def_addr_error: true\n      });\n      errors.def_addr_error = true;\n      flag = true;\n    } else {\n      this.setState({\n        def_addr_error: false\n      });\n      errors.def_addr_error = false;\n    }\n\n    if (this.state.arresting_off_name == \"\") {\n      this.setState({\n        arresting_off_name_error: true\n      });\n      errors.arresting_off_name_error = true;\n      flag = true;\n    } else {\n      this.setState({\n        arresting_off_name_error: false\n      });\n      errors.arresting_off_name_error = false;\n    }\n\n    if (this.state.name_pres_judge == \"\") {\n      this.setState({\n        name_pres_judge_error: true\n      });\n      errors.name_pres_judge_error = true;\n      flag = true;\n    } else {\n      this.setState({\n        name_pres_judge_error: false\n      });\n      errors.name_pres_judge_error = false;\n    }\n\n    if (this.state.crime_type == \"\") {\n      this.setState({\n        crime_type_error: true\n      });\n      errors.crime_type_error = true;\n      flag = true;\n    } else {\n      this.setState({\n        crime_type_error: false\n      });\n      errors.crime_type_error = false;\n    }\n\n    if (this.state.crime_loc == \"\") {\n      this.setState({\n        crime_loc_error: true\n      });\n      errors.crime_loc_error = true;\n      flag = true;\n    } else {\n      this.setState({\n        crime_loc_error: false\n      });\n      errors.crime_loc_error = false;\n    }\n\n    if (this.state.arrest_date == null) {\n      this.setState({\n        arrest_date_error: true\n      });\n      errors.arrest_date_error = true;\n      flag = true;\n    } else {\n      this.setState({\n        arrest_date_error: false\n      });\n      errors.arrest_date_error = false;\n    }\n\n    if (this.state.crime_date == null) {\n      this.setState({\n        crime_date_error: true\n      });\n      errors.crime_date_error = true;\n      flag = true;\n    } else {\n      this.setState({\n        crime_date_error: false\n      });\n      errors.crime_date_error = false;\n    }\n\n    if (this.state.starting_date == null) {\n      this.setState({\n        starting_date_error: true\n      });\n      errors.starting_date_error = true;\n      flag = true;\n    } else {\n      this.setState({\n        starting_date_error: false\n      });\n      errors.starting_date_error = false;\n    } //Some data consistency checks\n\n\n    if (this.state.crime_date > this.state.arrest_date) {\n      alert('Crime date cannot be after arrest date');\n      flag = true;\n    }\n\n    if (this.state.hearing_date && this.state.hearing_date < this.state.arrest_date) {\n      alert('Arrest Date cannot be after hearing date');\n      flag = true;\n    }\n\n    if (this.state.hearing_date && this.state.starting_date > this.state.hearing_date) {\n      alert('Starting Date cannot be After hearing date');\n      flag = true;\n    }\n\n    if (!flag) {\n      const requestOptions = {\n        'def_name': this.state.def_name,\n        'def_addr': this.state.def_addr,\n        'crime_type': this.state.crime_type,\n        'crime_date': {\n          'day': this.state.crime_date.getDate().toString(),\n          'month': (this.state.crime_date.getMonth() + 1).toString(),\n          'year': this.state.crime_date.getFullYear().toString()\n        },\n        'crime_loc': this.state.crime_loc,\n        'arresting_off_name': this.state.arresting_off_name,\n        'arrest_date': {\n          'day': this.state.arrest_date.getDate().toString(),\n          'month': (this.state.arrest_date.getMonth() + 1).toString(),\n          'year': this.state.arrest_date.getFullYear().toString()\n        },\n        'name_pres_judge': this.state.name_pres_judge,\n        'public_prosecutor_name': this.state.public_prosecutor_name,\n        'public_prosecutor_addr': this.state.public_prosecutor_addr,\n        'starting_date': {\n          'day': this.state.starting_date.getDate().toString(),\n          'month': (this.state.starting_date.getMonth() + 1).toString(),\n          'year': this.state.starting_date.getFullYear().toString()\n        },\n        'expected_completion_date': this.state.expected_completion_date ? {\n          'day': this.state.expected_completion_date.getDate().toString(),\n          'month': (this.state.expected_completion_date.getMonth() + 1).toString(),\n          'year': this.state.expected_completion_date.getFullYear().toString()\n        } : \"-1\",\n        'hearing_slot': this.state.hearing_slot ? this.state.hearing_slot : \"-1\",\n        'hearing_date': this.state.hearing_date ? {\n          'day': this.state.hearing_date.getDate().toString(),\n          'month': (this.state.hearing_date.getMonth() + 1).toString(),\n          'year': this.state.hearing_date.getFullYear().toString()\n        } : \"-1\"\n      };\n      axios.post('/api/addCase', requestOptions).then(res => {\n        console.log(res.data);\n\n        if (res.data.is_added == \"0\") {\n          alert(res.data.message);\n        } else {\n          if (this.props.getAddedCIN != null) this.props.getAddedCIN(res.data.cin);\n          alert('Case Added Successfully'); // this.props.goback();//Optional\n        }\n      }).catch(err => {\n        err.response ? alert('Error in Server ' + err.response.status) : console.log(err);\n      });\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    if (e.target.value == \"\") {\n      this.setState({\n        [e.target.name + \"_error\"]: true\n      });\n    } else {\n      this.setState({\n        [e.target.name + \"_error\"]: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Registrar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Registrar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.props.goback,\n            style: {\n              marginLeft: \"auto\"\n            },\n            className: \"btn btn-primary \",\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Add Case\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Defenent Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"def_name\",\n                onChange: this.handleChange,\n                className: \"form-control\",\n                placeholder: \"Enter Def Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 33\n              }, this), this.state.def_name_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Name cannot be Empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 62\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Defendent Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"def_addr\",\n                onChange: this.handleChange,\n                className: \"form-control\",\n                placeholder: \"Enter Def Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 33\n              }, this), this.state.def_addr_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Address cannot be Empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 62\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Crime Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"crime_type\",\n                onChange: this.handleChange,\n                className: \"form-control\",\n                placeholder: \"Enter Crime Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 33\n              }, this), this.state.crime_type_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Crime Type cannot be Empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 64\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [\"Enter Crime Date: \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                dateFormat: \"dd-MM-y\",\n                selected: this.state.crime_date,\n                onChange: date => {\n                  this.setState({\n                    crime_date: date\n                  });\n                  !date ? this.setState({\n                    crime_date_error: true\n                  }) : this.setState({\n                    crime_date_error: false\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 51\n              }, this), this.state.crime_date_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Crime Date cannot be Empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 64\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Crime Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"crime_loc\",\n                onChange: this.handleChange,\n                className: \"form-control\",\n                placeholder: \"Enter Crime Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 33\n              }, this), this.state.crime_loc_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Crime Location cannot be Empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 63\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Arresting Officer Name: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"arresting_off_name\",\n                onChange: this.handleChange,\n                className: \"form-control\",\n                placeholder: \"Enter Arresting Officer Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 33\n              }, this), this.state.arresting_off_name_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Name cannot be Empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 72\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [\"Enter Arrest Date: \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                dateFormat: \"dd-MM-y\",\n                selected: this.state.arrest_date,\n                onChange: date => {\n                  this.setState({\n                    arrest_date: date\n                  });\n                  !date ? this.setState({\n                    arrest_date_error: true\n                  }) : this.setState({\n                    arrest_date_error: false\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 52\n              }, this), this.state.arrest_date_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Arrest Date cannot be Empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 65\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Presiding Judge Name: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name_pres_judge\",\n                onChange: this.handleChange,\n                className: \"form-control\",\n                placeholder: \"Enter Presiding Judge Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 33\n              }, this), this.state.name_pres_judge_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Name cannot be Empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 69\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Public Prosecutor Name: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"public_prosecutor_name\",\n                onChange: this.handleChange,\n                className: \"form-control\",\n                placeholder: \"Enter Public Prosecutor Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 33\n              }, this), this.state.public_prosecutor_name_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Name cannot be Empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 76\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Public Prosecutor Address: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"public_prosecutor_addr\",\n                onChange: this.handleChange,\n                className: \"form-control\",\n                placeholder: \"Enter Public Prosecutor Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 33\n              }, this), this.state.public_prosecutor_addr_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Address cannot be Empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 76\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [\"Starting Date: \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                dateFormat: \"dd-MM-y\",\n                selected: this.state.starting_date,\n                onChange: date => {\n                  this.setState({\n                    starting_date: date\n                  });\n                  !date ? this.setState({\n                    starting_date_error: true\n                  }) : this.setState({\n                    starting_date_error: false\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 48\n              }, this), this.state.starting_date_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Starting Date cannot be Empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 67\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [\"Expected Completion Date: \", /*#__PURE__*/_jsxDEV(DatePicker, {\n                dateFormat: \"dd-MM-y\",\n                selected: this.state.expected_completion_date,\n                onChange: date => {\n                  this.setState({\n                    expected_completion_date: date\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 59\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary btn-block\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/anurat/JISS/frontend/src/components/createcase.component.js"],"names":["React","Component","GridLayout","axios","Dropdown","DatePicker","BrowserRouter","Router","LogoutButton","AddCase","constructor","props","state","def_name","def_addr","crime_type","crime_date","crime_loc","arresting_off_name","arrest_date","name_pres_judge","public_prosecutor_name","public_prosecutor_addr","starting_date","expected_completion_date","hearing_slot","hearing_date","def_name_error","def_addr_error","crime_type_error","crime_date_error","crime_loc_error","arresting_off_name_error","arrest_date_error","name_pres_judge_error","public_prosecutor_name_error","public_prosecutor_addr_error","starting_date_error","handleSubmit","bind","handleChange","e","preventDefault","errors","flag","setState","alert","requestOptions","getDate","toString","getMonth","getFullYear","post","then","res","console","log","data","is_added","message","getAddedCIN","cin","catch","err","response","status","target","name","value","render","goback","marginLeft","color","date"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\nimport axios from 'axios';\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LogoutButton from \"./logoutbutton\"\nimport './form.css';\n/**\n * props : hearing_slot,hearing_date,goback\n */\nexport default class AddCase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            def_name: \"\",\n            def_addr: \"\",\n            crime_type: \"\",\n            crime_date: null,\n            crime_loc: \"\",\n            arresting_off_name: \"\",\n            arrest_date: null,\n            name_pres_judge: \"\",\n            public_prosecutor_name: \"\",\n            public_prosecutor_addr: \"\",\n            starting_date: null,\n            expected_completion_date: null,\n            hearing_slot: props.hearing_slot ? props.hearing_slot : \"-1\",\n            hearing_date: props.hearing_date ? props.hearing_date : null,\n\n            def_name_error: false,\n            def_addr_error: false,\n            crime_type_error: false,\n            crime_date_error: false,\n            crime_loc_error: false,\n            arresting_off_name_error: false,\n            arrest_date_error: false,\n            name_pres_judge_error: false,\n            public_prosecutor_name_error: false,\n            public_prosecutor_addr_error: false,\n            starting_date_error: false\n\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        var errors = {\n            def_name_error: false,\n            def_addr_error: false,\n            crime_type_error: false,\n            crime_date_error: false,\n            crime_loc_error: false,\n            arresting_off_name_error: false,\n            arrest_date_error: false,\n            name_pres_judge_error: false,\n            public_prosecutor_name_error: false,\n            public_prosecutor_addr_error:false,\n            starting_date_error: false,\n\n        }\n        //Validate Form input\n        var flag = false;\n        if (this.state.def_name == \"\") {\n            this.setState({ def_name_error: true });\n            errors.def_name_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ def_name_error: false });\n            errors.def_name_error = false;\n        }\n\n        if (this.state.public_prosecutor_name == \"\") {\n            this.setState({ public_prosecutor_name_error: true });\n            errors.public_prosecutor_name_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ public_prosecutor_name_error: false });\n            errors.public_prosecutor_name_error = false;\n        }\n\n        if (this.state.public_prosecutor_addr == \"\") {\n            this.setState({ public_prosecutor_addr_error: true });\n            errors.public_prosecutor_addr_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ public_prosecutor_addr_error: false });\n            errors.public_prosecutor_addr_error = false;\n        }\n\n        if (this.state.def_addr == \"\") {\n            this.setState({ def_addr_error: true });\n            errors.def_addr_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ def_addr_error: false });\n            errors.def_addr_error = false;\n        }\n\n        if (this.state.arresting_off_name == \"\") {\n            this.setState({ arresting_off_name_error: true });\n            errors.arresting_off_name_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ arresting_off_name_error: false });\n            errors.arresting_off_name_error = false;\n        }\n\n        if (this.state.name_pres_judge == \"\") {\n            this.setState({ name_pres_judge_error: true });\n            errors.name_pres_judge_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ name_pres_judge_error: false });\n            errors.name_pres_judge_error = false;\n        }\n\n        \n\n        if (this.state.crime_type == \"\") {\n            this.setState({ crime_type_error: true });\n            errors.crime_type_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ crime_type_error: false });\n            errors.crime_type_error = false;\n        }\n\n        if (this.state.crime_loc == \"\") {\n            this.setState({ crime_loc_error: true });\n            errors.crime_loc_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ crime_loc_error: false });\n            errors.crime_loc_error = false;\n        }\n\n        if (this.state.arrest_date == null) {\n            this.setState({ arrest_date_error: true });\n            errors.arrest_date_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ arrest_date_error: false });\n            errors.arrest_date_error = false;\n        }\n\n        if (this.state.crime_date == null) {\n            this.setState({ crime_date_error: true });\n            errors.crime_date_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ crime_date_error: false });\n            errors.crime_date_error = false;\n        }\n\n        if (this.state.starting_date == null) {\n            this.setState({ starting_date_error: true });\n            errors.starting_date_error = true;\n            flag = true;\n        }\n        else {\n            this.setState({ starting_date_error: false });\n            errors.starting_date_error = false;\n        }\n\n        //Some data consistency checks\n        if(this.state.crime_date>this.state.arrest_date)\n        {\n            alert('Crime date cannot be after arrest date');\n            flag = true;\n        }\n        if(this.state.hearing_date && this.state.hearing_date<this.state.arrest_date)\n        {\n            alert('Arrest Date cannot be after hearing date');\n            flag = true;\n        }        \n        if(this.state.hearing_date && this.state.starting_date>this.state.hearing_date)\n        {\n            alert('Starting Date cannot be After hearing date');\n            flag = true;\n        }\n        \n        if (!flag) {\n            const requestOptions = {\n                'def_name': this.state.def_name,\n                'def_addr': this.state.def_addr,\n                'crime_type': this.state.crime_type,\n                'crime_date': {\n                    'day': this.state.crime_date.getDate().toString(),\n                    'month': (this.state.crime_date.getMonth()+1).toString(),\n                    'year': this.state.crime_date.getFullYear().toString()\n                },\n                'crime_loc': this.state.crime_loc,\n                'arresting_off_name': this.state.arresting_off_name,\n                'arrest_date': {\n                    'day': this.state.arrest_date.getDate().toString(),\n                    'month': (this.state.arrest_date.getMonth()+1).toString(),\n                    'year': this.state.arrest_date.getFullYear().toString()\n                },\n                'name_pres_judge': this.state.name_pres_judge,\n                'public_prosecutor_name': this.state.public_prosecutor_name,\n                'public_prosecutor_addr': this.state.public_prosecutor_addr,\n                'starting_date': {\n                    'day': this.state.starting_date.getDate().toString(),\n                    'month': (this.state.starting_date.getMonth()+1).toString(),\n                    'year': this.state.starting_date.getFullYear().toString()\n                },\n                'expected_completion_date': this.state.expected_completion_date ? {\n                    'day': this.state.expected_completion_date.getDate().toString(),\n                    'month': (this.state.expected_completion_date.getMonth()+1).toString(),\n                    'year': this.state.expected_completion_date.getFullYear().toString()\n                } : \"-1\",\n                'hearing_slot': this.state.hearing_slot ? this.state.hearing_slot : \"-1\",\n                'hearing_date': this.state.hearing_date ? {\n                    'day': this.state.hearing_date.getDate().toString(),\n                    'month': (this.state.hearing_date.getMonth()+1).toString(),\n                    'year': this.state.hearing_date.getFullYear().toString()\n                } : \"-1\"\n\n            };\n            axios.post('/api/addCase', requestOptions)\n                .then(res => {\n                    console.log(res.data);\n                    if (res.data.is_added == \"0\") {\n                        alert(res.data.message);\n                    }\n                    else {\n                        if(this.props.getAddedCIN!=null) this.props.getAddedCIN(res.data.cin) \n                        alert('Case Added Successfully');\n                        // this.props.goback();//Optional\n                    }\n                })\n                .catch(err => {\n                    err.response ? alert('Error in Server ' + err.response.status) : console.log(err);\n                });\n        }\n\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n        if (e.target.value == \"\") {\n            this.setState({ [e.target.name + \"_error\"]: true });\n        }\n        else {\n            this.setState({ [e.target.name + \"_error\"]: false });\n        }\n    }\n    render() {\n        return (\n            <Router>\n                <div className=\"Registrar\">\n                    <div className=\"Registrar-header\">\n                        <button\n                            onClick={this.props.goback}\n                            style={{ marginLeft: \"auto\" }}\n                            className=\"btn btn-primary \"\n                        >\n                            Go Back\n                    </button>\n                        <form onSubmit={this.handleSubmit}>\n                            <h3>Add Case</h3>\n\n                            <div className=\"form-group\">\n                                <label>Defenent Name</label>\n                                <input type=\"text\" name=\"def_name\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Def Name\" />\n                                {this.state.def_name_error ? <div style={{ color: \"red\" }}>Name cannot be Empty</div> : \"\"}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Defendent Address</label>\n                                <input type=\"text\" name=\"def_addr\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Def Address\" />\n                                {this.state.def_addr_error ? <div style={{ color: \"red\" }}>Address cannot be Empty</div> : \"\"}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Crime Type</label>\n                                <input type=\"text\" name=\"crime_type\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Crime Type\" />\n                                {this.state.crime_type_error ? <div style={{ color: \"red\" }}>Crime Type cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                Enter Crime Date: <DatePicker dateFormat=\"dd-MM-y\" selected={this.state.crime_date} onChange={date => {\n                                    this.setState({ crime_date: date });\n                                    (!date) ? this.setState({ crime_date_error: true }) : this.setState({ crime_date_error: false });\n                                }} />\n                                {this.state.crime_date_error ? <div style={{ color: \"red\" }}>Crime Date cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Crime Location</label>\n                                <input type=\"text\" name=\"crime_loc\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Crime Location\" />\n                                {this.state.crime_loc_error ? <div style={{ color: \"red\" }}>Crime Location cannot be Empty</div> : \"\"}\n                            </div>\n\n\n                            <div className=\"form-group\">\n                                <label>Arresting Officer Name: </label>\n                                <input type=\"text\" name=\"arresting_off_name\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Arresting Officer Name\" />\n                                {this.state.arresting_off_name_error ? <div style={{ color: \"red\" }}>Name cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                Enter Arrest Date: <DatePicker dateFormat=\"dd-MM-y\" selected={this.state.arrest_date} onChange={date => {\n                                    this.setState({ arrest_date: date });\n                                    (!date) ? this.setState({ arrest_date_error: true }) : this.setState({ arrest_date_error: false });\n                                }} />\n                                {this.state.arrest_date_error ? <div style={{ color: \"red\" }}>Arrest Date cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Presiding Judge Name: </label>\n                                <input type=\"text\" name=\"name_pres_judge\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Presiding Judge Name\" />\n                                {this.state.name_pres_judge_error ? <div style={{ color: \"red\" }}>Name cannot be Empty</div> : \"\"}\n                            </div>\n                            \n                            <div className=\"form-group\">\n                                <label>Public Prosecutor Name: </label>\n                                <input type=\"text\" name=\"public_prosecutor_name\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Public Prosecutor Name\" />\n                                {this.state.public_prosecutor_name_error ? <div style={{ color: \"red\" }}>Name cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Public Prosecutor Address: </label>\n                                <input type=\"text\" name=\"public_prosecutor_addr\" onChange={this.handleChange} className=\"form-control\" placeholder=\"Enter Public Prosecutor Address\" />\n                                {this.state.public_prosecutor_addr_error ? <div style={{ color: \"red\" }}>Address cannot be Empty</div> : \"\"}\n                            </div>\n\n                            \n\n                            <div className=\"form-group\">\n                                Starting Date: <DatePicker dateFormat=\"dd-MM-y\" selected={this.state.starting_date} onChange={date => {\n                                    this.setState({ starting_date: date });\n                                    (!date) ? this.setState({ starting_date_error: true }) : this.setState({ starting_date_error: false });\n                                }} />\n                                {this.state.starting_date_error ? <div style={{ color: \"red\" }}>Starting Date cannot be Empty</div> : \"\"}\n                            </div>\n\n                            <div className=\"form-group\">\n                                Expected Completion Date: <DatePicker dateFormat=\"dd-MM-y\" selected={this.state.expected_completion_date} onChange={date => {\n                                    this.setState({ expected_completion_date: date });\n                                }} />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}