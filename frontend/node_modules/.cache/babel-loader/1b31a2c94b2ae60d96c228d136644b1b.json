{"ast":null,"code":"var _jsxFileName = \"/home/anurat/JISS/frontend/src/components/addUser.component.js\";\nimport React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\nimport axios from 'axios';\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LogoutButton from \"./logoutbutton\";\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class AddUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      usr_name: \"\",\n      password: \"\",\n      usr_type: \"None\",\n      usr_addr: \"\",\n      usr_name_error: false,\n      username_error: false,\n      password_error: false,\n      usr_type_error: false,\n      usr_addr_error: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    var errors = {\n      usr_name_error: false,\n      username_error: false,\n      password_error: false,\n      usr_type_error: false,\n      usr_addr_error: false\n    }; //Validate Form input\n\n    if (this.state.usr_name == \"\") {\n      this.setState({\n        usr_name_error: true\n      });\n      errors.usr_name_error = true;\n    } else {\n      this.setState({\n        usr_name_error: false\n      });\n      errors.usr_name_error = false;\n    }\n\n    if (this.state.password.length < 3) {\n      this.setState({\n        password_error: true\n      });\n      errors.password_error = true;\n    } else {\n      this.setState({\n        password_error: false\n      });\n      errors.password_error = false;\n    }\n\n    if (this.state.username == \"\") {\n      this.setState({\n        username_error: true\n      });\n      errors.username_error = true;\n    } else {\n      this.setState({\n        username_error: false\n      });\n      errors.username_error = false;\n    }\n\n    if (this.state.usr_type == \"None\") {\n      this.setState({\n        usr_type_error: true\n      });\n      errors.usr_type_error = true;\n    } else {\n      this.setState({\n        usr_type_error: false\n      });\n      errors.usr_type_error = false;\n    }\n\n    if (this.state.usr_addr == \"\") {\n      this.setState({\n        usr_addr_error: true\n      });\n      errors.usr_addr_error = true;\n    } else {\n      this.setState({\n        usr_addr_error: false\n      });\n      errors.usr_addr_error = false;\n    }\n\n    if (!(errors.usr_name_error || errors.password_error || errors.username_error || errors.usr_addr_error || errors.usr_type_error)) {\n      console.log('Data to be Sent : ', this.state);\n      const requestOptions = {\n        'username': this.state.username,\n        'password': this.state.password,\n        'name': this.state.usr_name,\n        'usr_type': this.state.usr_type,\n        'usr_addr': this.state.usr_addr\n      };\n      axios.post('/api/addUser', requestOptions).then(res => {\n        console.log(res.data);\n\n        if (res.data.add_status == \"0\") {\n          alert(res.data.err_msg);\n        } else {\n          alert('User Added Successfully'); // this.props.goback();//Optional\n        }\n      }).catch(err => {\n        alert('Error in Server ' + err.response.status);\n        console.log(err.response);\n      });\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    }, () => {\n      if (e.target.name == \"usr_type\") {\n        if (e.target.value == \"None\") {\n          this.setState({\n            usr_type_error: true\n          });\n        } else {\n          this.setState({\n            usr_type_error: false\n          });\n        }\n      } else if (e.target.name == \"password\") {\n        if (e.target.value.length < 3) {\n          this.setState({\n            password_error: true\n          });\n        } else {\n          this.setState({\n            password_error: false\n          });\n        }\n      } else {\n        if (e.target.value == \"\") {\n          this.setState({\n            [e.target.name + \"_error\"]: true\n          });\n        } else {\n          this.setState({\n            [e.target.name + \"_error\"]: false\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Registrar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Registrar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.props.goback,\n            style: {\n              marginLeft: \"auto\"\n            },\n            className: \"btn btn-primary \",\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Add User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"usr_name\",\n                onChange: this.handleChange,\n                className: \"form-control\",\n                placeholder: \"EnterName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this), this.state.usr_name_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Name cannot be Empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 62\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"User Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control\",\n                  defaultValue: \"None\",\n                  name: \"usr_type\",\n                  onChange: this.handleChange,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"None\",\n                    children: \"Select User Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Lawyer\",\n                    children: \"Lawyer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Judge\",\n                    children: \"Judge\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this), this.state.usr_type_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"User Type must be Selected\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 62\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"User Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"usr_addr\",\n                onChange: this.handleChange,\n                className: \"form-control\",\n                placeholder: \"EnterUserAddr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), this.state.usr_addr_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Address cannot be Empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 62\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"username\",\n                onChange: this.handleChange,\n                className: \"form-control\",\n                placeholder: \"EnterUsername\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), this.state.username_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"Username cannot be Empty\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 62\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                onChange: this.handleChange,\n                className: \"form-control\",\n                placeholder: \"EnterPassword\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this), this.state.password_error ? /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"At least 3 characters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 62\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary btn-block\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/anurat/JISS/frontend/src/components/addUser.component.js"],"names":["React","Component","GridLayout","axios","Dropdown","DatePicker","BrowserRouter","Router","LogoutButton","AddUser","constructor","props","state","username","usr_name","password","usr_type","usr_addr","usr_name_error","username_error","password_error","usr_type_error","usr_addr_error","handleSubmit","bind","handleChange","e","preventDefault","errors","setState","length","console","log","requestOptions","post","then","res","data","add_status","alert","err_msg","catch","err","response","status","target","name","value","render","goback","marginLeft","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GridLayout from 'react-grid-layout';\nimport axios from 'axios';\nimport Dropdown from \"react-dropdown\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './registrar.css';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport LogoutButton from \"./logoutbutton\"\nimport './form.css';\nexport default class AddUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            usr_name: \"\",\n            password: \"\",\n            usr_type: \"None\",\n            usr_addr: \"\",\n            usr_name_error: false,\n            username_error: false,\n            password_error: false,\n            usr_type_error: false,\n            usr_addr_error: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleSubmit(e) {\n        e.preventDefault();\n        var errors = {\n            usr_name_error: false,\n            username_error: false,\n            password_error: false,\n            usr_type_error: false,\n            usr_addr_error: false\n        }\n        //Validate Form input\n        if (this.state.usr_name == \"\") {\n            this.setState({ usr_name_error: true });\n            errors.usr_name_error = true;\n        }\n        else {\n            this.setState({ usr_name_error: false });\n            errors.usr_name_error = false;\n        }\n        if (this.state.password.length < 3) {\n            this.setState({ password_error: true });\n            errors.password_error = true;\n        }\n        else {\n            this.setState({ password_error: false });\n            errors.password_error = false;\n        }\n        if (this.state.username == \"\") {\n            this.setState({ username_error: true });\n            errors.username_error = true;\n        }\n        else {\n            this.setState({ username_error: false });\n            errors.username_error = false;\n        }\n        if (this.state.usr_type == \"None\") {\n            this.setState({ usr_type_error: true });\n            errors.usr_type_error = true;\n        }\n        else {\n            this.setState({ usr_type_error: false });\n            errors.usr_type_error = false;\n        }\n\n        if (this.state.usr_addr == \"\") {\n            this.setState({ usr_addr_error: true });\n            errors.usr_addr_error = true;\n        }\n        else {\n            this.setState({ usr_addr_error: false });\n            errors.usr_addr_error = false;\n        }\n\n        if (!(errors.usr_name_error || errors.password_error || errors.username_error || errors.usr_addr_error || errors.usr_type_error)) {\n            console.log('Data to be Sent : ', this.state);\n            const requestOptions = {\n                'username': this.state.username, 'password': this.state.password,\n                'name': this.state.usr_name, 'usr_type': this.state.usr_type,\n                'usr_addr': this.state.usr_addr\n            };\n            axios.post('/api/addUser', requestOptions)\n                .then(res => {\n                    console.log(res.data);\n                    if (res.data.add_status == \"0\") {\n                        alert(res.data.err_msg);\n                    }\n                    else {\n                        alert('User Added Successfully');\n                        // this.props.goback();//Optional\n                    }\n                })\n                .catch(err => {\n                    alert('Error in Server ' + err.response.status);\n                    console.log(err.response);\n                });\n        }\n\n    }\n    handleChange(e) {\n        this.setState({ [e.target.name]: e.target.value }, () => {\n            if (e.target.name == \"usr_type\") {\n                if (e.target.value == \"None\") {\n                    this.setState({ usr_type_error: true });\n                }\n                else {\n                    this.setState({ usr_type_error: false });\n                }\n            }\n            else if (e.target.name == \"password\") {\n                if (e.target.value.length < 3) {\n                    this.setState({ password_error: true });\n                }\n                else {\n                    this.setState({ password_error: false });\n                }\n            }\n            else {\n                if (e.target.value == \"\") {\n                    this.setState({ [e.target.name + \"_error\"]: true });\n                }\n                else {\n                    this.setState({ [e.target.name + \"_error\"]: false });\n                }\n            }\n        });\n\n    }\n    render() {\n        return (\n            <Router>\n                <div className=\"Registrar\">\n                    <div className=\"Registrar-header\">\n                        <button\n                            onClick={this.props.goback}\n                            style={{ marginLeft: \"auto\" }}\n                            className=\"btn btn-primary \"\n                        >\n                            Go Back\n                    </button>\n                        <form onSubmit={this.handleSubmit}>\n                            <h3>Add User</h3>\n\n                            <div className=\"form-group\">\n                                <label>Name</label>\n                                <input type=\"text\" name=\"usr_name\" onChange={this.handleChange} className=\"form-control\" placeholder=\"EnterName\" />\n                                {this.state.usr_name_error ? <div style={{ color: \"red\" }}>Name cannot be Empty</div> : \"\"}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>User Type:</label>\n                                <label>\n                                    <select className=\"form-control\" defaultValue=\"None\" name=\"usr_type\" onChange={this.handleChange}>\n                                        <option value=\"None\">Select User Type</option>\n                                        <option value=\"Lawyer\">Lawyer</option>\n                                        <option value=\"Judge\">Judge</option>\n                                    </select>\n                                </label>\n                                {this.state.usr_type_error ? <div style={{ color: \"red\" }}>User Type must be Selected</div> : \"\"}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>User Address</label>\n                                <input type=\"text\" name=\"usr_addr\" onChange={this.handleChange} className=\"form-control\" placeholder=\"EnterUserAddr\" />\n                                {this.state.usr_addr_error ? <div style={{ color: \"red\" }}>Address cannot be Empty</div> : \"\"}\n                            </div>\n                            <div className=\"form-group\">\n                                <label>Username</label>\n                                <input type=\"text\" name=\"username\" onChange={this.handleChange} className=\"form-control\" placeholder=\"EnterUsername\" />\n                                {this.state.username_error ? <div style={{ color: \"red\" }}>Username cannot be Empty</div> : \"\"}\n                            </div>\n                            <br />\n                            <div className=\"form-group\">\n                                <label>Password</label>\n                                <input type=\"password\" name=\"password\" onChange={this.handleChange} className=\"form-control\" placeholder=\"EnterPassword\" />\n                                {this.state.password_error ? <div style={{ color: \"red\" }}>At least 3 characters</div> : \"\"}\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}